<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.distribute.data.dao.distribute.TSaleProductPriceDao">
    <resultMap id="BaseResultMap" type="com.haier.distribute.data.model.TSaleProductPrice">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="saleId" property="saleId" jdbcType="INTEGER"/>
        <result column="supplyPrice" property="supplyPrice" jdbcType="DECIMAL"/>
        <result column="salePrice" property="salePrice" jdbcType="DECIMAL"/>
        <result column="limitPrice" property="limitPrice" jdbcType="DECIMAL"/>
        <result column="priceStartTime" property="priceStartTime" jdbcType="VARCHAR"/>
        <result column="priceEndTime" property="priceEndTime" jdbcType="VARCHAR"/>
        <result column="createBy" property="createBy" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateBy" property="updateBy" jdbcType="VARCHAR"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, saleId, supplyPrice, salePrice, limitPrice, priceStartTime, priceEndTime, createBy, 
    createTime, updateBy, updateTime, remark
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_sale_product_price
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sale_product_price
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.haier.distribute.data.model.TSaleProductPrice">
    insert into t_sale_product_price (id, saleId, supplyPrice, 
      salePrice, limitPrice, priceStartTime, 
      priceEndTime, createBy, createTime, 
      updateBy, updateTime, remark
      )
    values (#{id,jdbcType=INTEGER}, #{saleId,jdbcType=INTEGER}, #{supplyPrice,jdbcType=DECIMAL}, 
      #{salePrice,jdbcType=DECIMAL}, #{limitPrice,jdbcType=DECIMAL}, #{priceStartTime,jdbcType=VARCHAR}, 
      #{priceEndTime,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.haier.distribute.data.model.TSaleProductPrice">
        insert into t_sale_product_price
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="saleId != null">
                saleId,
            </if>
            <if test="supplyPrice != null">
                supplyPrice,
            </if>
            <if test="salePrice != null">
                salePrice,
            </if>
            <if test="limitPrice != null">
                limitPrice,
            </if>
            <if test="priceStartTime != null">
                priceStartTime,
            </if>
            <if test="priceEndTime != null">
                priceEndTime,
            </if>
            <if test="createBy != null">
                createBy,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="updateBy != null">
                updateBy,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="saleId != null">
                #{saleId,jdbcType=INTEGER},
            </if>
            <if test="supplyPrice != null">
                #{supplyPrice,jdbcType=DECIMAL},
            </if>
            <if test="salePrice != null">
                #{salePrice,jdbcType=DECIMAL},
            </if>
            <if test="limitPrice != null">
                #{limitPrice,jdbcType=DECIMAL},
            </if>
            <if test="priceStartTime != null">
                #{priceStartTime,jdbcType=VARCHAR},
            </if>
            <if test="priceEndTime != null">
                #{priceEndTime,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.haier.distribute.data.model.TSaleProductPrice">
        update t_sale_product_price
        <set>
            <if test="saleId != null">
                saleId = #{saleId,jdbcType=INTEGER},
            </if>
            <if test="supplyPrice != null">
                supplyPrice = #{supplyPrice,jdbcType=DECIMAL},
            </if>
            <if test="salePrice != null">
                salePrice = #{salePrice,jdbcType=DECIMAL},
            </if>
            <if test="limitPrice != null">
                limitPrice = #{limitPrice,jdbcType=DECIMAL},
            </if>
            <if test="priceStartTime != null">
                priceStartTime = #{priceStartTime,jdbcType=VARCHAR},
            </if>
            <if test="priceEndTime != null">
                priceEndTime = #{priceEndTime,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                createBy = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                updateBy = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.haier.distribute.data.model.TSaleProductPrice">
    update t_sale_product_price
    set saleId = #{saleId,jdbcType=INTEGER},
      supplyPrice = #{supplyPrice,jdbcType=DECIMAL},
      salePrice = #{salePrice,jdbcType=DECIMAL},
      limitPrice = #{limitPrice,jdbcType=DECIMAL},
      priceStartTime = #{priceStartTime,jdbcType=VARCHAR},
      priceEndTime = #{priceEndTime,jdbcType=VARCHAR},
      createBy = #{createBy,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!-- 查询条件 -->
    <sql id="where_fragement">
        where 1=1
        AND t4.orderStatus = 203
        <if test="entity!=null">
            <if test="entity.cOrderSn != null and entity.cOrderSn !='' ">
                <![CDATA[ and t1.cOrderSn LIKE CONCAT('%', #{entity.cOrderSn} ,'%') ]]>
            </if>

            <if test="entity.sureYearMonth != null and entity.sureYearMonth !='' ">
                <![CDATA[ and from_unixtime(t4.firstConfirmTime,'%Y-%m') = #{entity.sureYearMonth}  ]]>
            </if>

            <if test="entity.source != null and entity.source !='' ">
                <![CDATA[ and t4.source = #{entity.source} ]]>
            </if>

            <if test="entity.orderSn != null and entity.orderSn !='' ">
                <![CDATA[ and t4.orderSn LIKE CONCAT('%', #{entity.orderSn} ,'%') ]]>
            </if>
            <if test="entity.productName != null and entity.productName !='' ">
                <![CDATA[ and t1.productName LIKE CONCAT('%', #{entity.productName} ,'%') ]]>
            </if>
            <if test="entity.sku != null and entity.sku !='' ">
                <![CDATA[ and t1.sku LIKE CONCAT('%', #{entity.sku} ,'%') ]]>
            </if>
            <if test="entity.productType != null and entity.productType !='' ">
                <![CDATA[ and t8.departmentCode = #{entity.productType} ]]>
            </if>
            <if test="entity.firstConfirmTimeS != null and entity.firstConfirmTimeS !='' ">
                <![CDATA[ and t4.firstConfirmTime >= #{entity.firstConfirmTimeS} ]]>
            </if>
            <if test="entity.firstConfirmTimeE != null and entity.firstConfirmTimeE !='' ">
                <![CDATA[ and t4.firstConfirmTime <= #{entity.firstConfirmTimeE} ]]>
            </if>
        </if>
    </sql>
    <sql id="pagination"> LIMIT #{start}, #{rows}  </sql>
    <!-- 查询page -->
    <select id="getPageByCondition" resultMap="BaseResultMap">
        SELECT
        t1.id,
        t1.orderId,
        t4.id,
        t1.cOrderSn,
        t4.orderSn,
        t1.productName,
        t1.sku,
        t5.cateName AS typeName,
        t1.price,
        t1.number,
        t7.channelName AS source,
        t4.sourceOrderSn,
        t3.supplyPrice,
        t6.monthPolicy,
        t4.firstConfirmTime,
        t8.departmentName AS productType
        FROM
        t_order_products t1
        LEFT JOIN t_sale_product t2 ON t1.sku = t2.sku
        LEFT JOIN t_orders t4 ON t4.id = t1.orderId
        LEFT JOIN t_sale_product_price t3 ON t2.id = t3.saleId
        AND FROM_UNIXTIME(t4.firstConfirmTime) BETWEEN str_to_date(
        t3.priceStartTime,
        '%Y-%m-%d%H:%i:%s'
        )
        AND str_to_date(
        t3.priceEndTime,
        '%Y-%m-%d%H:%i:%s'
        )
        LEFT JOIN ProductCates t5 ON t1.cateId = t5.id
        LEFT JOIN t_commission_policy_product t6 ON t1.sku = t6.sku
        AND
        FROM_UNIXTIME(t4.firstConfirmTime,'%Y') = t6.policyYear
        LEFT JOIN t_channels_info t7 ON t4.source = t7.channelCode
        LEFT JOIN t_department_product_type t8 ON t1.productType = t8.productTypeId
        <include refid="where_fragement"/>order by t4.firstConfirmTime desc
        <include refid="pagination"/>
    </select>
    <select id="getExportData" resultMap="BaseResultMap">
        SELECT
        t1.id,
        t1.orderId,
        t4.id,
        t1.cOrderSn,
        t4.orderSn,
        t1.productName,
        t1.sku,
        t5.cateName AS typeName,
        t1.price,
        t1.number,
        t7.channelName AS source,
        t4.sourceOrderSn,
        t3.supplyPrice,
        t6.monthPolicy,
        t4.firstConfirmTime,
        t8.departmentName AS productType
        FROM
        t_order_products t1
        LEFT JOIN t_sale_product t2 ON t1.sku = t2.sku
        LEFT JOIN t_orders t4 ON t4.id = t1.orderId
        LEFT JOIN t_sale_product_price t3 ON t2.id = t3.saleId
        AND FROM_UNIXTIME(t4.firstConfirmTime) BETWEEN str_to_date(
        t3.priceStartTime,
        '%Y-%m-%d%H:%i:%s'
        )
        AND str_to_date(
        t3.priceEndTime,
        '%Y-%m-%d%H:%i:%s'
        )
        LEFT JOIN ProductCates t5 ON t1.cateId = t5.id
        LEFT JOIN t_commission_policy_product t6 ON t1.sku = t6.sku
        AND
        FROM_UNIXTIME(t4.firstConfirmTime,'%Y') = t6.policyYear
        LEFT JOIN t_channels_info t7 ON t4.source = t7.channelCode
        LEFT JOIN t_department_product_type t8 ON t1.productType = t8.productTypeId
        <include refid="where_fragement"/>order by t4.firstConfirmTime desc
    </select>
    <!--分页count -->
    <select id="getPagerCount" resultType="long" parameterType="com.haier.distribute.data.model.PopOrderProducts">
        select count(1)
        FROM
        t_order_products t1
        LEFT JOIN t_sale_product t2 ON t1.sku = t2.sku
        LEFT JOIN t_orders t4 ON t4.id = t1.orderId
        LEFT JOIN t_sale_product_price t3 ON t2.id = t3.saleId
        AND FROM_UNIXTIME(t4.firstConfirmTime) BETWEEN str_to_date(
        t3.priceStartTime,
        '%Y-%m-%d%H:%i:%s'
        )
        AND str_to_date(
        t3.priceEndTime,
        '%Y-%m-%d%H:%i:%s'
        )
        LEFT JOIN ProductCates t5 ON t1.cateId = t5.id
        LEFT JOIN t_commission_policy_product t6 ON t1.sku = t6.sku
        LEFT JOIN t_channels_info t7 ON t4.source = t7.channelCode
        LEFT JOIN t_department_product_type t8 ON t1.productType = t8.productTypeId
        <include refid="where_fragement"/>
    </select>
    <!-- 根据saleId查询字表数据 -->
    <select id="selectBySaleId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_sale_product_price
        where saleId = #{saleId,jdbcType=INTEGER}
        ORDER BY priceStartTime ASC
    </select>
    <select id="selectCount" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        *
        from t_sale_product_price
        where
        saleId=#{saleId,jdbcType=INTEGER}
        <if test="startDateTime != null and startDateTime !='' ">
            AND str_to_date(`t_sale_product_price`.`priceStartTime`,'%Y-%m-%d%H:%i:%s')
            >=
            str_to_date(#{startDateTime,jdbcType=INTEGER},'%Y-%m-%d%H:%i:%s')
        </if>
        <if test="endDateTime != null and endDateTime !='' ">
            AND str_to_date(`t_sale_product_price`.`priceEndTime`,'%Y-%m-%d%H:%i:%s')
            &lt;=
            str_to_date(#{endDateTime,jdbcType=INTEGER},'%Y-%m-%d%H:%i:%s')
        </if>
        ORDER BY priceStartTime ASC
    </select>
    <delete id="deleteAuto" parameterType="java.lang.Integer">
        delete from t_sale_product_price
        where saleId = #{saleId,jdbcType=INTEGER}
    </delete>
    <select id="checkPriceTime" resultType="long">
        select count(1)
        FROM
        t_sale_product_price
        WHERE saleId = #{saleId}
        AND (
        (
        str_to_date(#{startTime,jdbcType=INTEGER},'%Y-%m-%d%H:%i:%s')
        BETWEEN
        str_to_date(`t_sale_product_price`.`priceStartTime`,'%Y-%m-%d%H:%i:%s')
        AND
        str_to_date(`t_sale_product_price`.`priceEndTime`,'%Y-%m-%d%H:%i:%s')
        )
        OR
        (
        str_to_date(#{endTime,jdbcType=INTEGER},'%Y-%m-%d%H:%i:%s')
        BETWEEN
        str_to_date(`t_sale_product_price`.`priceStartTime`,'%Y-%m-%d%H:%i:%s')
        AND
        str_to_date(`t_sale_product_price`.`priceEndTime`,'%Y-%m-%d%H:%i:%s')
        )
        )
        <if test="id != null and id !='' ">
            AND id != #{id}
        </if>
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.svc.job.dao.purchase.SysJobDao">
	<resultMap id="SysJobResult" type="com.haier.svc.job.model.SysJobEx">
		<result property="jobId" column="job_id" />
		<result property="jobName" column="job_name" />
		<result property="jobType" column="job_type" />
		<result property="jobStatus" column="job_status" />
		<result property="cfgDataStr" column="cfg_data" />
		<result property="cron" column="cron" />
		<result property="updateUser" column="update_user" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<resultMap id="sjob" type="com.haier.svc.job.model.SysJob">
		<result property="jobId" column="job_id" />
		<result property="jobName" column="job_name" />
		<result property="jobType" column="job_type" />
		<result property="jobStatus" column="job_status" />
		<result property="cfgData" column="cfg_data"
			typeHandler="com.haier.svc.job.dao.purchase.SysJobCfgDataTypeHandler" />
		<result property="cron" column="cron" />
		<result property="updateUser" column="update_user" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<select id="find" parameterType="Integer" resultMap="sjob">
		select
		`job_id`,`job_name`,`job_type`,`job_status`,`cfg_data`,`cron`,`update_user`,`update_time`
		from `sys_job`
		<where>
			<if test="status != null">and `job_status` = #{status}</if>
			<if test="name !=null and !name.isEmpty()">and `job_name` like #{name}</if>
		</where>
		order by `job_name`
	</select>
	<select id="getCount" resultType="Integer">
		select count(`job_id`)
		from `sys_job`
		<where>
			<if test="status != null">and `job_status` = #{status}</if>
			<if test="name !=null and !name.isEmpty()">and `job_name` like CONCAT('%',#{name},'%')</if>
		</where>
	</select>
	<update id="update" parameterType="com.haier.svc.job.model.SysJobEx">
		update `sys_job` set
		<if test="jobName !=null and jobName != ''">
			`job_name`=#{jobName},
		</if>
		<if test="jobType !=null and jobType != ''">
			`job_type`=#{jobType},
		</if>
		<if test="jobStatus !=null">
			`job_status`=#{jobStatus},
		</if>
		<if test="cfgDataStr !=null and cfgDataStr != ''">
			`cfg_data`=#{cfgDataStr},
		</if>
		<if test="cron !=null and cron != ''">
			`cron`=#{cron},
		</if>
		<if test="updateUser !=null and updateUser != ''">
			`update_user`=#{updateUser},
		</if>
		`job_id` = #{jobId} where `job_id` = #{jobId}
	</update>
	<update id="updateByName" parameterType="com.haier.svc.job.model.SysJobEx">
		update `sys_job` set
		<if test="jobId !=null and !jobId.isEmpty()">
			`job_id`=#{jobId},
		</if>
		<if test="jobType !=null and !jobType.isEmpty()">
			`job_type`=#{jobType},
		</if>
		<if test="jobStatus !=null">
			`job_status`=#{jobStatus},
		</if>
		<if test="cfgDataStr !=null and !cfgDataStr.isEmpty()">
			`cfg_data`=#{cfgDataStr},
		</if>
		<if test="cron !=null and !cron.isEmpty()">
			`cron`=#{cron},
		</if>
		<if test="updateUser !=null and !updateUser.isEmpty()">
			`update_user`=#{updateUser},
		</if>
		`update_time`=CURRENT_TIMESTAMP()
		where `job_name` = #{jobName}
	</update>
	<sql id="getJobListSQLCond">
		FROM
		sys_job
		WHERE 1 = 1
		<if test="jobName !=null and jobName != ''">
			AND UPPER(job_name) LIKE
			CONCAT(CONCAT('%',UPPER(#{jobName})),'%')
		</if>
		<if test="jobStatus != null">
			AND UPPER(job_status) LIKE
			CONCAT(CONCAT(UPPER(#{jobStatus})))
<!-- 			and job_status = #{jobStatus} -->
		</if>
	</sql>

	<select id="getJobList" parameterType="Map" resultMap="SysJobResult">
		select
		job_id,job_name,job_type,job_status,cfg_data,cron,update_user,update_time
		<include refid="getJobListSQLCond"></include>
		<if test="m!=null and n!=null">
			limit ${m},${n}
		</if>
	</select>

	<select id="getRowCnts" resultType="int">
		SELECT COUNT(1)
		<include refid="getJobListSQLCond" />
	</select>

	<!-- <insert id="addJob" useGeneratedKeys="true" keyProperty="jobId" -->
	<!-- parameterType="com.haier.svc.job.model.SysJobEx"> -->
	<!-- insert into sys_job -->
	<!-- (job_name,job_type,job_status,cfg_data,cron) -->
	<!-- values -->
	<!-- (#{jobName},#{jobType},#{jobStatus},#{cfgDataStr},#{cron}) -->
	<!-- </insert> -->
	<insert id="addJob" parameterType="com.haier.svc.job.model.SysJobEx">
		<selectKey resultType="Integer" order="AFTER"
			keyProperty="jobId">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into sys_job
		(job_name,job_type,job_status,cfg_data,cron)
		values
		(#{jobName},#{jobType},#{jobStatus},#{cfgDataStr},#{cron})
	</insert>

	<resultMap id="JobLogResult" type="com.haier.svc.job.model.JobLog">
		<result property="logId" column="log_id" />
		<result property="jobId" column="job_id" />
		<result property="startTime" column="start_time" />
		<result property="endTime" column="end_time" />
		<result property="nextTime" column="next_time" />
		<result property="sysStatus" column="sys_status" />
		<result property="bizStatus" column="biz_status" />
		<result property="message" column="message" />
	</resultMap>

	<sql id="findJobLogSQLCond">
		FROM
		sys_job_log
		WHERE 1 = 1
		<if test="logId !=null and logId != ''">
			AND UPPER(log_id) LIKE
			CONCAT(CONCAT('%',UPPER(#{logId})),'%')
		</if>
		<if test="sysStatus != null and sysStatus != ''">
 			AND UPPER(sys_status) LIKE
			CONCAT(CONCAT(UPPER(#{sysStatus})))
		</if>
		<if test="startTime  !=null and startTime != ''">
        	<![CDATA[
				AND UPPER(start_time) LIKE CONCAT(
					CONCAT('%', UPPER(#{startTime})),
					'%'
				)
			]]>
		</if>
		
		<if test="endTime  !=null and endTime != ''">
        	<![CDATA[
				AND UPPER(end_time) LIKE CONCAT(
					CONCAT('%', UPPER(#{endTime})),
					'%'
				)
			]]>
		</if>
	</sql>
	
	<select id="findJobLog" parameterType="Map" resultMap="JobLogResult">
		select
		log_id,job_id,start_time,end_time,next_time,sys_status,biz_status,message
		<include refid="findJobLogSQLCond"></include>
		<if test="m!=null and n!=null">
			limit ${m},${n}
		</if>
	</select>
	
	<select id="getJobLogRow" resultType="int">
		SELECT COUNT(1)
		<include refid="findJobLogSQLCond" />
	</select>

</mapper>
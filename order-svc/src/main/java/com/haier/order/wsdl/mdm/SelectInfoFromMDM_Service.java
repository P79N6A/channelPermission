package com.haier.order.wsdl.mdm;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.12
 * 2018-03-06T10:37:22.279+08:00
 * Generated source version: 3.1.12
 * 
 */
@WebServiceClient(name = "SelectInfoFromMDM", 
                  wsdlLocation = "file:/D:/java/SelectInfoFromMDM.wsdl",
                  targetNamespace = "http://www.example.org/SelectInfoFromMDM/") 
public class SelectInfoFromMDM_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.example.org/SelectInfoFromMDM/", "SelectInfoFromMDM");
    public final static QName SelectInfoFromMDMSOAP = new QName("http://www.example.org/SelectInfoFromMDM/", "SelectInfoFromMDMSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/java/SelectInfoFromMDM.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SelectInfoFromMDM_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/java/SelectInfoFromMDM.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SelectInfoFromMDM_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SelectInfoFromMDM_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SelectInfoFromMDM_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    




    /**
     *
     * @return
     *     returns SelectInfoFromMDM
     */
    @WebEndpoint(name = "SelectInfoFromMDMSOAP")
    public SelectInfoFromMDM getSelectInfoFromMDMSOAP() {
        return super.getPort(SelectInfoFromMDMSOAP, SelectInfoFromMDM.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SelectInfoFromMDM
     */
    @WebEndpoint(name = "SelectInfoFromMDMSOAP")
    public SelectInfoFromMDM getSelectInfoFromMDMSOAP(WebServiceFeature... features) {
        return super.getPort(SelectInfoFromMDMSOAP, SelectInfoFromMDM.class, features);
    }

}

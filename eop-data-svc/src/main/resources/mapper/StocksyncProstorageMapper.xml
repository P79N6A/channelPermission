<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.eop.data.dao.StocksyncProstorageDao" >
  <resultMap id="BaseResultMap" type="com.haier.eop.data.model.StocksyncProstorage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="syncProductId" property="syncProductId" jdbcType="INTEGER" />
    <result column="syncStorageId" property="syncStorageId" jdbcType="INTEGER" />
    <result column="sku" property="sku" jdbcType="VARCHAR" />
    <result column="tzSku" property="tzSku" jdbcType="VARCHAR" />
    <result column="stype" property="stype" jdbcType="INTEGER" />
    <result column="sCode" property="sCode" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="isOn" property="isOn" jdbcType="TINYINT" />
    <result column="addTime" property="addTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, syncProductId, syncStorageId, sku, tzSku, stype, sCode, source, isOn, addTime, 
    updateTime
  </sql>
  
   <select id="Listf" resultMap="BaseResultMap">
SELECT *
	FROM stocksyncprostorage
	<where>
     isOn=#{entity.isOn}
	<if test="entity!=null">
		<if test="entity.source != null and entity.source !='' ">
        <![CDATA[ and source = #{entity.source} ]]>
      </if>
	  <if test="entity.sku!= null and entity.sku!='' ">
        <![CDATA[ and sku like #{entity.sku}]]>
      </if>
 	<if test="entity.tzSku != null and entity.tzSku !='' ">
        <![CDATA[ and tzSku like #{entity.tzSku}]]>
      </if>
      <if test="entity.sCode != null and entity.sCode !='' ">
        <![CDATA[ and sCode like #{entity.sCode}]]>
      </if>
	</if>
    </where>
	<include refid="pagination" />
  </select>
  
   <select id="getPagerCountS" resultType="int">
		SELECT count(id)
	FROM stocksyncprostorage
		<where>
		isOn=#{entity.isOn}
		<if test="entity!=null">
		<if test="entity.source != null and entity.source !='' ">
        <![CDATA[ and source = #{entity.source} ]]>
      </if>
	  <if test="entity.sku!= null and entity.sku!='' ">
        <![CDATA[ and sku like #{entity.sku}]]>
      </if>
 	<if test="entity.tzSku != null and entity.tzSku !='' ">
        <![CDATA[ and tzSku = #{entity.tzSku}]]>
      </if>
      <if test="entity.sCode != null and entity.sCode !='' ">
        <![CDATA[ and sCode = #{entity.sCode}]]>
      </if>
	</if>
        </where>
	</select>
  <sql id="pagination"> LIMIT #{start}, #{rows}  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stocksyncprostorage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stocksyncprostorage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBySourceAndSku">
    delete from stocksyncprostorage
    where source = #{source}
    and sku = #{sku}
  </delete>
  <insert id="insert" parameterType="com.haier.eop.data.model.StocksyncProstorage" >
    insert into stocksyncprostorage (id, syncProductId, syncStorageId, 
      sku, tzSku, stype, 
      sCode, source, isOn, 
      addTime, updateTime)
    values (#{id,jdbcType=INTEGER}, #{syncProductId,jdbcType=INTEGER}, #{syncStorageId,jdbcType=INTEGER}, 
      #{sku,jdbcType=VARCHAR}, #{tzSku,jdbcType=VARCHAR}, #{stype,jdbcType=INTEGER}, 
      #{sCode,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{isOn,jdbcType=TINYINT}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.haier.eop.data.model.StocksyncProstorage" >
    update stocksyncprostorage
    <set >
      <if test="syncProductId != null" >
        syncProductId = #{syncProductId,jdbcType=INTEGER},
      </if>
      <if test="syncStorageId != null" >
        syncStorageId = #{syncStorageId,jdbcType=INTEGER},
      </if>
      <if test="sku != null" >
        sku = #{sku,jdbcType=VARCHAR},
      </if>
      <if test="tzSku != null" >
        tzSku = #{tzSku,jdbcType=VARCHAR},
      </if>
      <if test="stype != null" >
        stype = #{stype,jdbcType=INTEGER},
      </if>
      <if test="sCode != null" >
        sCode = #{sCode,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="isOn != null" >
        isOn = #{isOn,jdbcType=TINYINT},
      </if>
      <if test="addTime != null" >
        addTime = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haier.eop.data.model.StocksyncProstorage" >
    update stocksyncprostorage
    set syncProductId = #{syncProductId,jdbcType=INTEGER},
      syncStorageId = #{syncStorageId,jdbcType=INTEGER},
      sku = #{sku,jdbcType=VARCHAR},
      tzSku = #{tzSku,jdbcType=VARCHAR},
      stype = #{stype,jdbcType=INTEGER},
      sCode = #{sCode,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      isOn = #{isOn,jdbcType=TINYINT},
      addTime = #{addTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
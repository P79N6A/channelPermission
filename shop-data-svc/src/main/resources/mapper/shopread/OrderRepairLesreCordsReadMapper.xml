<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.shop.dao.shopread.OrderRepairLESRecordsReadDao" >
  <resultMap id="BaseResultMap" type="com.haier.shop.model.OrderRepairLESRecords" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteId" property="siteId" jdbcType="INTEGER" />
    <result column="addTime" property="addTime" jdbcType="INTEGER" />
    <result column="orderProductId" property="orderProductId" jdbcType="INTEGER" />
    <result column="orderRepairId" property="orderRepairId" jdbcType="INTEGER" />
    <result column="recordSn" property="recordSn" jdbcType="VARCHAR" />
    <result column="operate" property="operate" jdbcType="TINYINT" />
    <result column="storageType" property="storageType" jdbcType="TINYINT" />
    <result column="lesOrderSn" property="lesOrderSn" jdbcType="VARCHAR" />
    <result column="lesOrderSnTime" property="lesOrderSnTime" jdbcType="INTEGER" />
    <result column="lesOutPing" property="lesOutPing" jdbcType="VARCHAR" />
    <result column="lesOutPingTime" property="lesOutPingTime" jdbcType="INTEGER" />
    <result column="sCode" property="sCode" jdbcType="VARCHAR" />
    <result column="success" property="success" jdbcType="TINYINT" />
    <result column="opCancelFlag" property="opCancelFlag" jdbcType="TINYINT" />
    <result column="addTimeTs" property="addTimeTs" jdbcType="VARCHAR" />
    <result column="lesOutPingTimeTs" property="lesOutPingTimeTs" jdbcType="VARCHAR" />
    <result column="lesOrderSnTimeTS" property="lesOrderSnTimeTS" jdbcType="VARCHAR" />
  </resultMap>
	<resultMap id="orderRepairLESRecordsResult" type="com.haier.shop.model.OrderRepairLESRecords">
		<result property="id" column="id" />
	<result property="siteId" column="siteId" />
	<result property="addTime" column="addTime" />
	<result property="orderProductId" column="orderProductId" />
	<result property="orderRepairId" column="orderRepairId" />
	<result property="recordSn" column="recordSn" />
	<result property="operate" column="operate" />
	<result property="storageType" column="storageType" />
	<result property="lesOrderSn" column="lesOrderSn" />
	<result property="lesOrderSnTime" column="lesOrderSnTime"/>
	<result property="lesOutPing" column="lesOutPing" />
	<result property="lesOutPingTime" column="lesOutPingTime" />
	<result property="sCode" column="sCode" />
	<result property="success" column="success" />
	<result property="opCancelFlag" column="opCancelFlag" />
	<result property="number" column="number" />
	<result property="price" column="price" />
	<result property="productName" column="productName" />
	<result property="pushFailNumber" column="pushFailNumber" />
	<result property="repairSn" column="repairSn" />
	
	</resultMap>
  <select id="get" parameterType="Integer" resultMap="orderRepairLESRecordsResult">
		select `id`,`siteId`,`addTime`,`orderProductId`,`orderRepairId`,`recordSn`,`operate`,`storageType`,`lesOrderSn`,`lesOutPing`,`lesOutPingTime`,`sCode`,`success`
		from `orderrepairlesrecords`
		where `id` = #{id}
	</select>
	<select id="getByRecordSn" parameterType="map" resultMap="orderRepairLESRecordsResult">
		select `id`,`siteId`,`addTime`,`orderProductId`,`orderRepairId`,`recordSn`,`operate`,`storageType`,`lesOrderSn`,`lesOutPing`,`lesOutPingTime`,`sCode`,`success`
		from `orderrepairlesrecords`
		where `recordSn` = #{recordSn} 
		order by id desc
		limit 1
	</select>
	<select id="queryLesreCodrdsId" parameterType="java.lang.String" resultMap="BaseResultMap">
	 SELECT
		 id,
		from_unixtime(addTime) addTimeTs,
		operate,
		storageType,
		lesOrderSn,
		from_unixtime(lesOrderSnTime) lesOrderSnTimeTS,
		lesOutPing,
		from_unixtime(lesOutPingTime) lesOutPingTimeTs,
		success,
		recordSn
	FROM
		orderrepairlesrecords
	WHERE
		orderRepairId = #{id}
  </select>
	<select id="countOrderChangesByOperate" parameterType="map" resultType="int">
		select count(*)
		from `orderrepairlesrecords`
		where `orderProductId` = #{orderProductId} and `operate`=#{operate}
	</select>
	<select id="getByLesOrderSn" resultMap="orderRepairLESRecordsResult">
	  select `id`,`siteId`,`addTime`,`orderProductId`,`orderRepairId`,`recordSn`,`operate`,`storageType`,
		`lesOrderSn`,`lesOutPing`,`lesOutPingTime`,`sCode`,`success`
		from `orderrepairlesrecords`
		where `lesOrderSn` = #{lesOrderSn} and recordSn=#{cOrderSn} limit 1
	</select>
	<select id="queryLesRecords" parameterType="com.haier.shop.model.OrderRepairLESRecords" resultMap="orderRepairLESRecordsResult">
		select `id`,`siteId`,`addTime`,`orderProductId`,`orderRepairId`,`recordSn`,`operate`,`storageType`,
		`lesOrderSn`,`lesOutPing`,`lesOutPingTime`,`sCode`,`success`
		from `orderrepairlesrecords`
		where `orderRepairId` = #{orderRepairId} 
		<if test="operate != null">
			and operate = #{operate} 
		</if>
		<if test="success != null">
			and success = #{success} 
		</if>
		<if test="storageType != null">
			and storageType = #{storageType}
		</if>
	</select>
	<select id="queryUNSucCancelLesRecordsCnt" resultType="int">
		select count(*)
		from `orderrepairlesrecords` where `orderRepairId`=#{orderRepairId} and `operate`=#{operate}
		and `storageType`=#{storageType} and `success` != 2
	</select>
    <select id="getWaitforCancelOP" resultMap="orderRepairLESRecordsResult">
    	select * from orderrepairlesrecords
    	where 
    	opCancelFlag = 0 and lesOutPing != '' 
    	and lesOutPingTime > 0 
    	order by id DESC limit #{limitNum}
    </select>
    
     <select id="queryOutofStorage" resultMap="orderRepairLESRecordsResult">
     SELECT
		r.id,
		r.orderProductId,
		r.orderRepairId,
		r.recordSn,
		r.operate,
		r.storageType,
		r.lesOrderSn,
		r.lesOrderSnTime,
		r.lesOutPing,
		r.lesOutPingTime,
		r.sCode,
		r.success,
		r.opCancelFlag,
		r.falg,
		p.productId,
		p.price,
		p.number,
		p.productName,
		p.sku,
		r.pushFailNumber,
		s.repairSn
	FROM
		 orderrepairlesrecords r,
		 orderproducts p,
		 orderrepairs s
	WHERE
		r.orderProductId = p.id
	AND r.orderRepairId = s.id
	and s.handleStatus != '6'
	AND r.falg in ('0','2')
	and r.PushFailNumber <![CDATA[  < ]]>10
	AND p.shippingMode != 'B2C'
    </select>
	<select id="queryOutofStorageByRepairid" resultMap="orderRepairLESRecordsResult">
     SELECT
		r.id,
		r.orderProductId,
		r.orderRepairId,
		r.recordSn,
		r.operate,
		r.storageType,
		r.lesOrderSn,
		r.lesOrderSnTime,
		r.lesOutPing,
		r.lesOutPingTime,
		r.sCode,
		r.success,
		r.opCancelFlag,
		r.falg,
		p.productId,
		p.price,
		p.number,
		p.productName,
		p.sku,
		r.pushFailNumber,
		s.repairSn
	FROM
		 orderrepairlesrecords r,
		 orderproducts p,
		 orderrepairs s
	WHERE
		r.orderProductId = p.id
	AND r.orderRepairId = s.id
	and s.handleStatus != '6'
	AND r.falg in ('0','2')
	and r.PushFailNumber <![CDATA[  < ]]>10
	AND p.shippingMode != 'B2C'
	and s.id = #{orderRepairsId}
    </select>
	<select id="queryRecordSn" resultMap="BaseResultMap" parameterType="java.lang.String">
	 SELECT
		id,
		orderProductId,
		orderRepairId,
		recordSn,
		operate,
		storageType,
		success
	FROM
		orderrepairlesrecords
	WHERE
		operate =#{operate}
	and storageType=#{storageType}
	and	orderRepairId = #{orderRepairId}
	 </select>
	<select id="queryNotLesOrder" resultMap="BaseResultMap" >
	 SELECT
		id,
		orderProductId,
		orderRepairId,
		recordSn,
		operate,
		storageType,
		success
	FROM
		orderrepairlesrecords
	WHERE lesOrderSn is null
	  limit 1000
	 </select>
	 
	<select id="queryStorageType" resultMap="orderRepairLESRecordsResult">
		SELECT
		  l.siteId,
		  l.addTime,
		  l.orderProductId,
		  l.orderRepairId,
		  l.recordSn,
		  l.operate,
		  l.storageType,
		  l.lesOrderSn,
		  l.lesOrderSnTime,
		  l.lesOutPing,
		  l.lesOutPingTime,
		  l.sCode,
		  l.success,
		  l.opCancelFlag,
		  l.falg,
		  l.failReason,
		  l.pushFailNumber
		FROM orderrepairlesrecords l,
		orderrepairs r,
		orderrepairhprecords h
		WHERE
		  l.orderRepairId = r.id
		  AND l.operate = '2'
		  AND l.storageType IN ('10', '41')
		  AND l.falg = '1'
		  AND r.handleStatus != '6'
		  AND  r.id = h.orderRepairId
		  AND h.quality ='2'
		AND  r.storageStatus NOT  IN ('110','141')
	</select>
	<select id="b2cqueryStorageType" resultMap="orderRepairLESRecordsResult">
		SELECT
		  l.siteId,
		  l.addTime,
		  l.orderProductId,
		  l.orderRepairId,
		  l.recordSn,
		  l.operate,
		  l.storageType,
		  l.lesOrderSn,
		  l.lesOrderSnTime,
		  l.lesOutPing,
		  l.lesOutPingTime,
		  l.sCode,
		  l.success,
		  l.opCancelFlag,
		  l.falg,
		  l.failReason,
		  l.pushFailNumber
		FROM orderrepairlesrecords l,
		orderrepairs r,
      orderproducts p
		WHERE
		  l.orderRepairId = r.id
        AND r.orderProductId = p.id
        AND p.shippingMode = 'B2C'
		  AND l.operate = '2'
		  AND l.storageType = '10'
		  AND l.falg = '1'
		  AND r.handleStatus != '6'
		AND  r.storageStatus != '110'
	</select>
	
	<select id="queryTransferBatch" parameterType="java.lang.String" resultMap="orderRepairLESRecordsResult">
	SELECT
		r.id,
		r.orderProductId,
		r.orderRepairId,
		r.recordSn,
		r.operate,
		r.storageType,
		r.lesOrderSn,
		r.lesOrderSnTime,
		r.lesOutPing,
		r.lesOutPingTime,
		r.sCode,
		r.success,
		r.opCancelFlag,
		r.falg,
		p.productId,
		p.price,
		p.number,
		p.productName,
		p.sku,
		r.pushFailNumber,
		s.repairSn
	FROM
		orderrepairlesrecords r,
		orderproducts p,
		orderrepairs s
	WHERE
		r.orderProductId = p.id
	AND r.orderRepairId = s.id
	and s.handleStatus != '6'
	AND r.falg in ('0','2')
	AND s.id =#{orderRepairsId}
	</select>

	<select id="queryRepairLesOrder" parameterType="java.lang.String" resultMap="orderRepairLESRecordsResult">
	SELECT
		r.id,
		r.orderProductId,
		r.orderRepairId,
		r.recordSn,
		r.operate,
		r.storageType,
		r.lesOrderSn,
		r.lesOrderSnTime,
		r.lesOutPing,
		r.lesOutPingTime,
		r.sCode,
		r.success,
		r.opCancelFlag,
		r.falg,
		p.productId,
		p.price,
		p.number,
		p.productName,
		p.sku,
		r.pushFailNumber,
		s.repairSn
	FROM
		orderrepairlesrecords r,
		orderproducts p,
		orderrepairs s
	WHERE
		r.orderProductId = p.id
	AND r.orderRepairId = s.id
	AND s.id =#{orderRepairsId}
	</select>
	<select id="queryStorageRegion" parameterType="java.lang.String" resultType="java.util.Map">
	 SELECT storage_code, province, city, region, adress, zip_code, contact, tel
      FROM storage_region r
      WHERE r.storage_code = #{code}
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.shop.dao.shopread.StorageCitiesReadDao">
    <resultMap id="storageCitiesResult" type="com.haier.shop.model.StorageCities">
        <result property="id" column="id"/>
        <result property="provinceId" column="provinceId"/>
        <result property="cityId" column="cityId"/>
        <result property="regionId" column="regionId"/>
        <result property="provinceName" column="provinceName"/>
        <result property="cityName" column="cityName"/>
        <result property="regionName" column="regionName"/>
        <result property="sCodeA" column="sCodeA"/>
        <result property="sCodeB" column="sCodeB"/>
        <result property="onedayLimit" column="onedayLimit"/>
        <result property="tcCover" column="tcCover"/>
        <result property="tcLimit" column="tcLimit"/>
        <result property="pointCover" column="pointCover"/>
        <result property="pointLimit" column="pointLimit"/>
    </resultMap>
    <select id="get" parameterType="Integer" resultMap="storageCitiesResult">
        select
        `id`,`provinceId`,`cityId`,`regionId`,`provinceName`,`cityName`,`regionName`,`sCodeA`,`sCodeB`,`onedayLimit`,`tcCover`,`tcLimit`,`pointCover`,`pointLimit`
        from `StorageCities`
        where `id` = #{id}
    </select>
    <select id="getCodeListByCity" parameterType="Integer" resultType="java.lang.String">
        select distinct `sCodeA`
        from `StorageCities`
        where `cityId` = #{cityId}
    </select>
    <select id="getCodeListByRegion" parameterType="Integer" resultType="java.lang.String">
        select distinct `sCodeA`
        from `StorageCities`
        where `regionId` = #{regionId}
    </select>
    <select id="getStorageCityByIds" parameterType="map" resultMap="storageCitiesResult">
        select
        `id`,`provinceId`,`cityId`,`regionId`,`provinceName`,`cityName`,`regionName`,`sCodeA`,`sCodeB`,`onedayLimit`,`tcCover`,`tcLimit`,`pointCover`,`pointLimit`
        from `StorageCities`
        where `provinceId`=#{provinceId} and `cityId`=#{cityId} and `regionId`=#{regionId}
    </select>
    <select id="getStorageCities" resultType="com.haier.shop.model.StorageCities">
        select distinct sCodeA, cityId from StorageCities
    </select>
    <select id="getAllProvince" resultMap="storageCitiesResult">
        SELECT `provinceId`,`provinceName` FROM `StorageCities` group by id asc
    </select>
    <select id="getAllCityByProvId" parameterType="map" resultMap="storageCitiesResult">
        SELECT `cityId`, `cityName` FROM `StorageCities` where `provinceId`=#{provinceId} group by cityId order by
        cityId asc
    </select>
    <select id="getAllRegionByCityId" parameterType="map" resultMap="storageCitiesResult">
        SELECT `regionId`,`regionName` FROM `StorageCities` WHERE `cityId`=#{cityId} group by regionId order by id asc
    </select>
    <select id="getAllCityIds" resultMap="storageCitiesResult">
        SELECT distinct cityId from `StorageCities`
    </select>
    <select id="getAllCities" resultMap="storageCitiesResult">
        select cityId,sCodeA from StorageCities group by cityId,sCodeA
    </select>
    <select id="getAllRegions" resultMap="storageCitiesResult">
        select cityId,regionId,sCodeA from StorageCities group by cityId,regionId,sCodeA
    </select>
    <!-- <insert id="insert" parameterType="com.haier.cbs.stock.entity.StorageCities">
        insert into `StorageCities`(`provinceId`,`cityId`,`regionId`,`provinceName`,`cityName`,`regionName`,`sCodeA`,`sCodeB`,`onedayLimit`,`tcCover`,`tcLimit`,`pointCover`,`pointLimit`)
        values(#{provinceId},#{cityId},#{regionId},#{provinceName},#{cityName},#{regionName},#{sCodeA},#{sCodeB},#{onedayLimit},#{tcCover},#{tcLimit},#{pointCover},#{pointLimit})
    </insert>
    <update id="update" parameterType="com.haier.cbs.stock.entity.StorageCities">
        update `StorageCities` set `provinceId`=#{provinceId},`cityId`=#{cityId},`regionId`=#{regionId},`provinceName`=#{provinceName},`cityName`=#{cityName},`regionName`=#{regionName},`sCodeA`=#{sCodeA},`sCodeB`=#{sCodeB},`onedayLimit`=#{onedayLimit},`tcCover`=#{tcCover},`tcLimit`=#{tcLimit},`pointCover`=#{pointCover},`pointLimit`=#{pointLimit}
        where `id` = #{id}
    </update> -->
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.shop.dao.shopread.ProductCatesReadDao" >
    <resultMap id="BaseResultMap" type="com.haier.shop.model.ProductCates" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="siteId" property="siteId" jdbcType="INTEGER" />
    <result column="parentId" property="parentId" jdbcType="INTEGER" />
    <result column="parentPath" property="parentPath" jdbcType="VARCHAR" />
    <result column="cateName" property="cateName" jdbcType="VARCHAR" />
    <result column="sortNum" property="sortNum" jdbcType="TINYINT" />
    <result column="isHidden" property="isHidden" jdbcType="TINYINT" />
    <result column="lastModifyTime" property="lastModifyTime" jdbcType="INTEGER" />
    <result column="modified" property="modified" jdbcType="TIMESTAMP" />
	<result property="count" column="count"/>
  </resultMap>
    <select id="selectByProducttypesId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
   id,cateName
    from ProductCates
  </select>
	<select id="findSortCount" resultMap="BaseResultMap" >
		select IFNULL(count(*),0) count,pc.parentId from OrderProducts opro
		LEFT JOIN OrderRepairHPRecords orhp
		on orhp.orderProductId = opro.id
		left join ProductTypes pt
		on opro.productType = pt.attrCateId
		LEFT JOIN ProductCates pc
		on pc.cateName = pt.typeName
		where (quality='5' or quality='6') 
		group by pc.parentId
   </select>
    <select id="selectByProducttypesSku" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    id,cateName
    from ProductCates 
    where  id = #{id,jdbcType=INTEGER}
   </select>
   <select id="findIndustry" resultMap="BaseResultMap"  >
   SELECT cateName from ProductCates
	where id = (
		select parentId from ProductCates
			where cateName = #{typeName,jdbcType=VARCHAR} )
  </select>
     <select id="findindustry" resultMap="BaseResultMap"  >
   SELECT cateName,id from ProductCates
	where parentId = 0
  </select>

    <resultMap id="productcatesResult" type="com.haier.shop.model.ProductCates">
    <result property="id" column="id"/>
    <result property="siteId" column="siteId"/>
    <result property="parentId" column="parentId"/>
    <result property="parentPath" column="parentPath"/>
    <result property="cateName" column="cateName"/>
    <result property="sortNum" column="sortNum"/>
    <result property="isHidden" column="isHidden"/>
    <result property="cateFilters" column="cateFilters"/>
    <result property="extendCateFilters" column="extendCateFilters"/>
    <result property="priceRange" column="priceRange"/>
    <result property="packDesc" column="packDesc"/>
    <result property="deliveryDesc" column="deliveryDesc"/>
    <result property="afterService" column="afterService"/>
    <result property="lastModifyTime" column="lastModifyTime"/>
  </resultMap>
    <select id="getAllChildren" resultMap="productcatesResult">
    SELECT
    `id`,
    `siteId`,
    `parentId`,
    `parentPath`,
    `cateName`,
    `sortNum`,
    `isHidden`,
    `cateFilters`,
    `extendCateFilters`,
    `priceRange`,
    `packDesc`,
    `deliveryDesc`,
    `afterService`,
    `lastModifyTime`
    FROM `ProductCates`
    WHERE `parentId` = #{parentId}
  </select>

    <select id="getAllProductCates" resultMap="BaseResultMap">
        SELECT
            `id`,
            `siteId`,
            `parentId`,
            `parentPath`,
            `cateName`,
            `sortNum`,
            `isHidden`,
            `cateFilters`,
            `extendCateFilters`,
            `priceRange`,
            `packDesc`,
            `deliveryDesc`,
            `afterService`,
            `lastModifyTime`
        FROM `ProductCates`
    </select>
</mapper>
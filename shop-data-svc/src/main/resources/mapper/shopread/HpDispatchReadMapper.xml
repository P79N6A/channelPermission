<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.shop.dao.shopread.HpDispatchReadDao">

	<resultMap id="hPQueuesResult" type="com.haier.shop.model.HPQueues">
		<result property="id" column="id" />
		<result property="orderProductId" column="orderProductId" />
		<result property="pushData" column="pushData" />
		<result property="success" column="success" />
		<result property="count" column="count" />
		<result property="addTime" column="addTime" />
		<result property="lastMessage" column="lastMessage" />
		<result property="successTime" column="successTime" />
		<result property="vomSuccess" column="vomSuccess" />
		<result property="vomCount" column="vomCount" />
		<result property="vomLastMessage" column="vomLastMessage" />
		<result property="vomSuccessTime" column="vomSuccessTime" />
		<result property="vomReturnData" column="vomReturnData" />
	</resultMap>

	<select id="getHpQueueInfo" parameterType="map" resultType="java.util.Map">
		select  
			hp.`id`,
			hp.`orderProductId`,
			hp.count
		from 
			`HPQueues` hp 
		where 	hp.`success` = 0
			and hp.`count` &lt;= 25
		order by 
			hp.id
		limit #{topX}
	</select>
	
	<select id="getOrderProductInfo" parameterType="map" resultType="java.util.Map">
		select  
			op.orderId,
			op.`id` as productId,
			op.`status`,
			op.netPointId,
			op.cOrderSn,
			op.sku,
			op.number,
			op.productAmount,
			op.makeReceiptType,
			op.sCode,
			op.tsCode,
			op.productType,
			op.hpReservationDate,
			op.cPayTime
		from 
			OrderProducts op
		where
			op.`id` = #{orderProductId}
	</select>
	
	<select id="getOrderInfo" parameterType="map" resultType="java.util.Map">
		select  
			os.id as orderId,
			os.paymentStatus,
			os.`orderStatus`,
			os.taobaoGroupId,
			os.consignee,
			os.mobile,
			os.phone,
			os.region,
			os.regionName,
			os.address,
			os.remark,
			os.orderSn,
			os.source,
			os.orderType,
			os.paymentCode,
			os.poiId,
			os.markBuilding,
			convert(os.isCod,SIGNED) as isCod,
			os.codConfirmTime,
			os.tailPayTime,
			os.payTime,
			os.addTime,
			os.ckCode
		from 
			Orders os
		where
			os.`id` = #{orderId}
	</select>
	
	<select id="getOrderWorkFlowInfo" parameterType="map" resultType="java.util.Map">
		select  
			ow.mustNetPointAcceptTime
		from 
			OrderWorkflows ow
		where
			ow.orderProductId = #{orderProductId}
	</select>
	
	<select id="getReservationShippingInfo" parameterType="map" resultType="java.util.Map">
		select  
			rs.date,
			rs.time
		from 
			ReservationShipping rs
		where
			rs.orderId = #{orderId}
	</select>
	
	<select id="getMemberInvoiceInfo" parameterType="map" resultType="java.util.Map">
		select  
			convert(electricFlag,SIGNED) as electricFlag
		from 
			MemberInvoices
		where
			orderId = #{orderId}
	</select>
	
	<select id="getOrderCountList" resultType="java.util.Map">  
		 select 
		 	os.id,count(op.id) as countId
		 from  
			 (select 
			     distinct os.id as orderId
			 from 
				 Orders os
					inner join
				 OrderProducts op on op.orderId=os.id
	         where 
			     op.id in
	             <foreach collection="orderProductIds" item="oid" open="(" separator="," close=")" index="index">
			     #{oid}
			     </foreach>
			 ) t 
			 	inner join 
			 Orders os on t.orderId=os.id 
			 	inner join
			 OrderProducts op on op.orderId=os.id
		 where 
		 	 os.orderStatus != 202 and os.orderStatus != 203 and op.status != 110 and op.status != 130
			 and op.shippingMode != 'B2C'
			 and op.stockType='WA'
		 group by 
		 	os.id 
	</select>
	
	<!-- 区域表 -->
	<select id="getRegions" resultType="java.util.Map">
		select 
			`id`,`code`
		from 
			`Regions`
			where regionType in (1,2,3) 
	</select>
	
	<!-- 物料编码对照表 -->
	<select id="getSkuMappings" resultType="java.util.Map">
		select 
			`sku`,`skuH`
		from 
			`SkuMappings`
	</select>
	
	<select id="getHpQueueUnSendInfo" parameterType="Integer" resultMap="hPQueuesResult">
		select  
			`id`,`orderProductId`,`pushData`,`success`,`count`,`addTime`,`lastMessage`,`successTime`,vomSuccess,vomCount
		from 
			`HPQueues`  
		where 	`success` = 0
			and `count` &lt;= 25
		order by 
			id
		limit #{topX}
	</select>

</mapper>
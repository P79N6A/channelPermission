<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.shop.dao.shopread.OrderPriceGateReadDao">

	<resultMap id="orderPriceGateResult" type="com.haier.shop.model.OrderPriceGate">
		<result property="id" column="id" />
		<result property="orderSource" column="order_source" />
		<result property="channelCode" column="channel_code" />
		<result property="industryCode" column="industry_code" />
		<result property="productGroup" column="product_group" />
		<result property="corderSn" column="corder_sn" />
		<result property="orderSn" column="order_sn" />
		<result property="sku" column="sku" />
		<result property="cateId" column="cate_id" />
		<result property="cateName" column="cate_name" />
		<result property="brandId" column="brand_id" />
		<result property="brandName" column="brand_name" />
		<result property="orderProductPrice" column="order_product_price" />
		<result property="couponAmount" column="coupon_amount" />
		<result property="platformCouponAmount" column="platform_coupon_amount" />
		<result property="orderProductAmount" column="order_product_amount" />
		<result property="orderProductNumber" column="order_product_number" />
		<result property="guaranteePrice" column="guarantee_price" />
		<result property="subductionPrice" column="subduction_price" />
		<result property="orderAddTime" column="order_add_time" />
		<result property="createTime" column="create_time" />
		<result property="lockReason" column="lock_reason" />
		<result property="operator" column="operator" />
		<result property="responsiblePerson" column="responsible_person" />
		<result property="unlockReason" column="unlock_reason" />
		<result property="unlockTime" column="unlock_time" />
		<result property="gateStatus" column="gate_status" />
		<result property="gateType" column="gate_type" />
		<result property="orderStatus" column="orderStatus" />
		<result property="orderProductStatus" column="order_product_status" />
		<result property="payStatus" column="cpayment_status" />
		<result property="productName" column="productName" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<select id="getOrderPriceGatebyCOrderSn" resultMap="orderPriceGateResult">
		select `id`,`order_source`,`channel_code`,`industry_code`,`product_group`,`corder_sn`,`order_sn`,`sku`,`cate_id`,`cate_name`,`brand_id`,`brand_name`,`order_product_price`,`coupon_amount`,`platform_coupon_amount`,`order_product_amount`,`order_product_number`,`guarantee_price`,`subduction_price`,`order_add_time`,`create_time`,`lock_reason`,`operator`,`responsible_person`,`unlock_reason`,`unlock_time`,`gate_status`,`gate_type`,`update_time`
		from order_price_gate
		where corder_sn = #{cOrderSn}
		and gate_type = #{gateType}
	</select>

	<select id="getUnLockbyOrderSn" resultType="java.util.Map">
		select os.id as orderId,op.id as orderProductId,op.netPointId,os.paymentStatus,os.orderStatus,op.status,price.gate_type,price.subduction_price,price.channel_code,price.industry_code,price.corder_sn
		from 
			order_price_gate price
				inner join
		orders os on price.order_sn=os.orderSn
				inner join
		orderproducts op on price.corder_sn=op.cOrderSn
		where 
			order_sn = #{orderSn} and gate_status=1
	</select>
	
	<select id="getBrandNameByBrandId" resultType="java.lang.String">
		select 
			brandName
		from
		brands
		where 
			id = #{id}
	</select>
	
	<select id="getCateNameByCateId" resultType="java.lang.String">
		select 
			cateName
		from
		productcates
		where 
			id = #{id}
	</select>


	<select id="getOrderPriceGateList" parameterType="Map" resultMap="orderPriceGateResult">
		select
		opg.`id`,
		opg.`order_source`,
		opg.`channel_code`,
		opg.`industry_code`,
		opg.`product_group`,
		opg.`corder_sn`,
		opg.`order_sn`,
		opg.`sku`,
		opg.`cate_id`,
		opg.`cate_name`,
		opg.`brand_id`,
		opg.`brand_name`,
		opg.`order_product_price`,
		opg.`coupon_amount`,
		opg.`platform_coupon_amount`,
		opg.`order_product_amount`,
		opg.`order_product_number`,
		opg.`guarantee_price`,
		opg.`subduction_price`,
		FROM_UNIXTIME(opg.`order_add_time`,'%Y-%m-%d %H:%i:%S') AS `order_add_time`,
		FROM_UNIXTIME(opg.`create_time`,'%Y-%m-%d %H:%i:%S') AS `create_time`,
		opg.`lock_reason`,
		opg.`operator`,
		opg.`responsible_person`,
		opg.`unlock_reason`,
		FROM_UNIXTIME(UNIX_TIMESTAMP(opg.`unlock_time`),'%Y-%m-%d %H:%i:%S') AS `unlock_time`,
		opg.`gate_status`,
		opg.`gate_type`,
		FROM_UNIXTIME(UNIX_TIMESTAMP(opg.`update_time`),'%Y-%m-%d %H:%i:%S') AS `update_time`,
		os.orderStatus AS orderStatus,
		op.productName AS productName
		from order_price_gate opg left join orders os on opg.order_sn = os.orderSn left join orderproducts op on opg.corder_sn=op.cOrderSn
		where 1=1
		<include refid="orderPriceGateQuery"/>
		<if test="params.m!=null and params.n!=null">
			Limit ${params.m},${params.n}
		</if>
	</select>

	<select id="getOrderPriceProductGroup" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT
		DISTINCT product_group,product_group_name
		FROM
		`order_price_product_group_industry`
		<where>
			<if test="industry !=null and industry !='' ">
				industry_code =#{industry }
			</if>
		</where>
	</select>

	<select id="getRows" resultType="int" parameterType="Map">
		select
		COUNT(1)
		from order_price_gate opg left join orders os on opg.order_sn = os.orderSn left join orderproducts op on opg.corder_sn=op.cOrderSn
		where 1=1
		<include refid="orderPriceGateQuery"/>
	</select>

	<!--订单开票列表  query  -->
	<sql id="orderPriceGateQuery">
		<if test="params.orderSn !=null and params.orderSn != ''">
			and opg.order_sn like CONCAT('%',#{params.orderSn},'%')
		</if>
		<if test="params.cOrderSn !=null and params.cOrderSn != ''">
			and opg.corder_sn = #{params.cOrderSn}
		</if>
		<if test="params.channel !=null and params.channel != ''">
			and opg.channel_code = #{params.channel}
		</if>
		<if test="params.orderSource !=null and params.orderSource != ''">
			and opg.order_source = #{params.orderSource}
		</if>
		<if test="params.gateStatus !=null and params.gateStatus != ''">
			and opg.gate_status = #{params.gateStatus}
		</if>
		<if test="params.gateType !=null and params.gateType != ''">
			and opg.gate_type = #{params.gateType}
		</if>
		<if test="params.industryCode !=null and params.industryCode != ''">
			and opg.industry_code = #{params.industryCode}
		</if>
		<if test="params.productGroup !=null and params.productGroup != ''">
			and opg.product_group = #{params.productGroup}
		</if>
		<if test="params.createTimeMin !=null and params.createTimeMin != ''">
			and opg.create_time &gt;= #{params.createTimeMin}
		</if>
		<if test="params.createTimeMax !=null and params.createTimeMax != ''">
			and opg.create_time &lt;= #{params.createTimeMax}
		</if>
		<if test="params.orderStatusCode !=null and params.orderStatusCode.size() &gt; 0">
			and os.orderStatus in
			<foreach collection="params.orderStatusCode" index="index" item="orderStatus" open="(" separator="," close=")">
				#{orderStatus}
			</foreach>
		</if>
	</sql>
</mapper>
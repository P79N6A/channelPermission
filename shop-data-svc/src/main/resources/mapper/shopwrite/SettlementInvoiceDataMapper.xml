<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Code generated by CodeGen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.haier.shop.dao.settleCenter.SettlementInvoiceDataDao">
    <resultMap id="BaseResultMap" type="com.haier.shop.model.SettlementInvoiceData">
        <id column="id" property="id"/>
        <result column="settlementInvoiceQueueId" property="settlementinvoicequeueid"/>
        <result column="cOrderSn" property="cordersn"/>
        <result column="oldcOrderSn" property="oldcordersn"/>
        <result column="sourceOrderSn" property="sourceordersn"/>
        <result column="source" property="source"/>
        <result column="sellPeople" property="sellpeople"/>
        <result column="productCateName" property="productcatename"/>
        <result column="brandName" property="brandname"/>
        <result column="sku" property="sku"/>
        <result column="productName" property="productname"/>
        <result column="consignee" property="consignee"/>
        <result column="payTime" property="paytime"/>
        <result column="number" property="number"/>
        <result column="amount" property="amount"/>
        <result column="month" property="month"/>
        <result column="year" property="year"/>
        <result column="isMakeReceipt" property="ismakereceipt"/>
        <result column="settlementType" property="settlementtype"/>
        <result column="success" property="success"/>
        <result column="count" property="count"/>
        <result column="statusType" property="statustype"/>
        <result column="invoiceTime" property="invoicetime"/>
        <result column="state" property="state"/>
        <result column="busAuditorPeople" property="busauditorpeople"/>
        <result column="busAuditorTime" property="busauditortime"/>
        <result column="finAuditorPeople" property="finauditorpeople"/>
        <result column="finAuditorTime" property="finauditortime"/>
        <result column="pushData" property="pushdata"/>
        <result column="returnData" property="returndata"/>
        <result column="lastMessage" property="lastmessage"/>
        <result column="addTime" property="addtime"/>
        <result column="addPeople" property="addpeople"/>
        <result column="modifyTime" property="modifytime"/>
        <result column="industry" property="industry" />
        
    </resultMap>
    
    <resultMap id="parentSource" type="java.lang.String" >
	    <result column="parent" property="parent" jdbcType="VARCHAR" />
	</resultMap>

    <sql id="tb">
        settlement_invoice_data
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        settlementInvoiceQueueId, 
        cOrderSn, 
        oldcOrderSn, 
        sourceOrderSn, 
        source, 
        sellPeople, 
        productCateName, 
        brandName, 
        sku, 
        productName, 
        consignee, 
        payTime, 
        number, 
        amount, 
        month, 
        year, 
        isMakeReceipt, 
        settlementType, 
        success, 
        count, 
        statusType, 
        invoiceTime, 
        state, 
        busAuditorPeople, 
        busAuditorTime, 
        finAuditorPeople, 
        finAuditorTime, 
        pushData, 
        returnData, 
        lastMessage, 
        addTime, 
        addPeople, 
        modifyTime
        
    </sql>

    <sql id="vals">
        #{settlementinvoicequeueid}, 
        #{cordersn}, 
        #{oldcordersn}, 
        #{sourceordersn}, 
        #{source}, 
        #{sellpeople}, 
        #{productcatename}, 
        #{brandname}, 
        #{sku}, 
        #{productname}, 
        #{consignee}, 
        #{paytime}, 
        #{number}, 
        #{amount}, 
        #{month}, 
        #{year}, 
        #{ismakereceipt}, 
        #{settlementtype}, 
        #{success}, 
        #{count}, 
        #{statustype}, 
        #{invoicetime}, 
        #{state}, 
        #{busauditorpeople}, 
        #{busauditortime}, 
        #{finauditorpeople}, 
        #{finauditortime}, 
        #{pushdata}, 
        #{returndata}, 
        #{lastmessage}, 
         now(),
        #{addpeople}, 
        #{modifytime}
        
    </sql>

    <sql id="criteria">
        <if test="id != null">AND id = #{id}</if>
        <if test="settlementinvoicequeueid != null">AND settlementInvoiceQueueId = #{settlementinvoicequeueid}</if>
        <if test="cordersn != null">AND cOrderSn = #{cordersn}</if>
        <if test="oldcordersn != null">AND oldcOrderSn = #{oldcordersn}</if>
        <if test="sourceordersn != null">AND sourceOrderSn = #{sourceordersn}</if>
        <if test="source != null">AND source = #{source}</if>
        <if test="sellpeople != null">AND sellPeople = #{sellpeople}</if>
        <if test="productcatename != null">AND productCateName = #{productcatename}</if>
        <if test="brandname != null">AND brandName = #{brandname}</if>
        <if test="sku != null">AND sku = #{sku}</if>
        <if test="productname != null">AND productName = #{productname}</if>
        <if test="consignee != null">AND consignee = #{consignee}</if>
        <if test="paytime != null">AND payTime = #{paytime}</if>
        <if test="number != null">AND number = #{number}</if>
        <if test="amount != null">AND amount = #{amount}</if>
        <if test="month != null">AND month = #{month}</if>
        <if test="year != null">AND year = #{year}</if>
        <if test="ismakereceipt != null">AND isMakeReceipt = #{ismakereceipt}</if>
        <if test="settlementtype != null">AND settlementType = #{settlementtype}</if>
        <if test="success != null">AND success = #{success}</if>
        <if test="count != null">AND count = #{count}</if>
        <if test="statustype != null">AND statusType = #{statustype}</if>
        <if test="invoicetime != null">AND invoiceTime = #{invoicetime}</if>
        <if test="state != null">AND state = #{state}</if>
        <if test="busauditorpeople != null">AND busAuditorPeople = #{busauditorpeople}</if>
        <if test="busauditortime != null">AND busAuditorTime = #{busauditortime}</if>
        <if test="finauditorpeople != null">AND finAuditorPeople = #{finauditorpeople}</if>
        <if test="finauditortime != null">AND finAuditorTime = #{finauditortime}</if>
        <if test="pushdata != null">AND pushData = #{pushdata}</if>
        <if test="returndata != null">AND returnData = #{returndata}</if>
        <if test="lastmessage != null">AND lastMessage = #{lastmessage}</if>
        <if test="addtime != null">AND addTime = #{addtime}</if>
        <if test="addpeople != null">AND addPeople = #{addpeople}</if>
        <if test="modifytime != null">AND modifyTime = #{modifytime}</if>
        
    </sql>

    <insert id="create" parameterType="com.haier.shop.model.SettlementInvoiceData" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            #{item.settlementinvoicequeueid}, 
            #{item.cordersn}, 
            #{item.oldcordersn}, 
            #{item.sourceordersn}, 
            #{item.source}, 
            #{item.sellpeople}, 
            #{item.productcatename}, 
            #{item.brandname}, 
            #{item.sku}, 
            #{item.productname}, 
            #{item.consignee}, 
            #{item.paytime}, 
            #{item.number}, 
            #{item.amount}, 
            #{item.month}, 
            #{item.year}, 
            #{item.ismakereceipt}, 
            #{item.settlementtype}, 
            #{item.success}, 
            #{item.count}, 
            #{item.statustype}, 
            #{item.invoicetime}, 
            #{item.state}, 
            #{item.busauditorpeople}, 
            #{item.busauditortime}, 
            #{item.finauditorpeople}, 
            #{item.finauditortime}, 
            #{item.pushdata}, 
            #{item.returndata}, 
            #{item.lastmessage}, 
            #{item.addtime}, 
            #{item.addpeople}, 
            #{item.modifytime}
            
            )
        </foreach>
    </insert>

    <select id="load" parameterType="long" resultMap="BaseResultMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="com.haier.shop.model.SettlementInvoiceData">
        UPDATE <include refid="tb"/>
        <set>
            <if test="settlementinvoicequeueid != null">settlementInvoiceQueueId = #{settlementinvoicequeueid},</if>
            <if test="cordersn != null">cOrderSn = #{cordersn},</if>
            <if test="oldcordersn != null">oldcOrderSn = #{oldcordersn},</if>
            <if test="sourceordersn != null">sourceOrderSn = #{sourceordersn},</if>
            <if test="source != null">source = #{source},</if>
            <if test="sellpeople != null">sellPeople = #{sellpeople},</if>
            <if test="productcatename != null">productCateName = #{productcatename},</if>
            <if test="brandname != null">brandName = #{brandname},</if>
            <if test="sku != null">sku = #{sku},</if>
            <if test="productname != null">productName = #{productname},</if>
            <if test="consignee != null">consignee = #{consignee},</if>
            <if test="paytime != null">payTime = #{paytime},</if>
            <if test="number != null">number = #{number},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="month != null">month = #{month},</if>
            <if test="year != null">year = #{year},</if>
            <if test="ismakereceipt != null">isMakeReceipt = #{ismakereceipt},</if>
            <if test="settlementtype != null">settlementType = #{settlementtype},</if>
            <if test="success != null">success = #{success},</if>
            <if test="count != null">count = #{count},</if>
            <if test="statustype != null">statusType = #{statustype},</if>
            <if test="invoicetime != null">invoiceTime = #{invoicetime},</if>
            <if test="state != null">state = #{state},</if>
            <if test="busauditorpeople != null">busAuditorPeople = #{busauditorpeople},</if>
            <if test="busauditortime != null">busAuditorTime = #{busauditortime},</if>
            <if test="finauditorpeople != null">finAuditorPeople = #{finauditorpeople},</if>
            <if test="finauditortime != null">finAuditorTime = #{finauditortime},</if>
            <if test="pushdata != null">pushData = #{pushdata},</if>
            <if test="returndata != null">returnData = #{returndata},</if>
            <if test="lastmessage != null">lastMessage = #{lastmessage},</if>
            <if test="addtime != null">addTime = #{addtime},</if>
            <if test="addpeople != null">addPeople = #{addpeople},</if>
            <if test="modifytime != null">modifyTime = #{modifytime},</if>

            modifyTime=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM <include refid="tb"/>
        WHERE id IN
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="list" parameterType="com.haier.shop.model.SettlementInvoiceData" resultMap="BaseResultMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <sql id="pagingSql" >
        from <include refid="tb" /> t
        left join ods_tmfx_peculiar_category pc
        on pc.sku = t.sku and pc.flag = 'Y'
        left join  ods_source_dictionary o
        on  o.source=t.source 

    </sql>
    <sql id="pagingWhere">
        <where>
            1=1
            <if test="param.year != null and param.year != ''">
                AND year = #{param.year}
            </if>
            <if test="param.month != null and param.month != ''">
                AND month = #{param.month}
            </if>
            <if test="param.sellPeople != null and param.sellPeople != ''">
                AND sellPeople = #{param.sellPeople}
            </if>
            <if test="param.settlementType != null and param.settlementType != ''">
                AND settlementType = #{param.settlementType}
            </if>
            <if test="param.state != null and param.state != ''">
                AND state = #{param.state}
            </if>
            <if test="param.statusType != null and param.statusType != ''">
                AND statusType = #{param.statusType}
            </if>
            <if test="param.payTimeMin != null and param.payTimeMin != ''">
                <![CDATA[AND payTime >= #{param.payTimeMin}]]>
            </if>
            <if test="param.payTimeMax != null and param.payTimeMax != ''">
                <![CDATA[AND payTime <= #{param.payTimeMax}]]>
            </if>
            <if test="param.invoiceTimeMin != null and param.invoiceTimeMin != ''">
                <![CDATA[AND invoiceTime >= #{param.invoiceTimeMin}]]>
            </if>
            <if test="param.invoiceTimeMax != null and param.invoiceTimeMax != ''">
                <![CDATA[AND invoiceTime <= #{param.invoiceTimeMax}]]>
            </if>
             <if test="param.source != null and param.source != ''">
                <![CDATA[AND o.parent =#{param.source} ]]>
            </if>
        </where>
    </sql>
    <select id="count" parameterType="map" resultType="long">
        select  count(1)
        <include refid="pagingSql" />
        <include refid="pagingWhere" />
    </select>
    <select id="paging"   resultMap="BaseResultMap" >
        select
        t.id,
        t.settlementInvoiceQueueId,
        t.cOrderSn,
        t.oldcOrderSn,
        t.sourceOrderSn,
        ifnull(o.parent,t.source) source,
        t.sellPeople,
        ifnull(pc.category,t.productCateName) productCateName,
        t.brandName,
        t.sku,
        t.productName,
        t.consignee,
        t.payTime,
        t.number,
        t.amount,
        t.month,
        t.year,
        t.isMakeReceipt,
        t.settlementType,
        t.success,
        t.count,
        t.statusType,
        t.invoiceTime,
        t.state,
        t.busAuditorPeople,
        t.busAuditorTime,
        t.finAuditorPeople,
        t.finAuditorTime,
        t.pushData,
        t.returnData,
        t.lastMessage,
        t.addTime,
        t.addPeople,
        t.modifyTime
        <include refid="pagingSql" />
        <include refid="pagingWhere" />
        order by

        t.id desc
        LIMIT #{page.start}, #{page.pageSize}

    </select>


    <select id="export"   resultType="map" >
        select
        t.id id,
        t.settlementInvoiceQueueId settlementinvoicequeueid,
        t.cOrderSn cordersn,
        t.oldcOrderSn oldcordersn,
        t.sourceOrderSn sourceordersn,
        ifnull(o.parent,t.source) source,
        t.sellPeople sellpeople,
        ifnull(pc.category,t.productCateName) productcatename,
        t.brandName brandname,
        t.sku sku,
        t.productName productname,
        t.consignee consignee,
        from_unixtime(t.payTime,'%Y-%m-%d %k:%i:%S') paytime,
        t.number number,
        t.amount amount,
        t.month month,
        t.year year,
        t.isMakeReceipt ismakereceipt,
        t.settlementType settlementtype,
        t.success success,
        t.count count,
        case t.statusType when 1 then '已开票' WHEN 4 then '作废/冲红' end statustype,
        from_unixtime(t.invoiceTime,'%Y-%m-%d %k:%i:%S') invoicetime,
        case t.state when 0 then '无需审核' when 1 then '待业务审核'
        when -1 then '业务审核拒绝' when 2 then '待财务审核'
        when -2 then '财务审核拒绝' when 3 then '审核通过' end state,
        t.busAuditorPeople busauditorpeople,
        t.busAuditorTime busauditortime,
        t.finAuditorPeople finauditorpeople,
        t.finAuditorTime finauditortime,
        t.pushData pushdata,
        t.returnData returndata,
        t.lastMessage lastmessage,
        t.addTime addtime,
        t.addPeople addpeople,
        t.modifyTime modifytime
        <include refid="pagingSql" />
        <include refid="pagingWhere" />
        order by
        <!--        <if test="sort !=null and sort !=''">
                    ${sort} ${order},
                </if>-->
        t.id desc


    </select>



    <select id="queryDetailToSummary" resultMap="BaseResultMap">
        select
        d.sellPeople,
        d.brandName,
        d.sku,
        max(source) source,
        max(d.productName) productName,
        i.industry industry,
        sum(d.number) number,
        sum(d.amount) amount
        from settlement_invoice_data d
        <if test="source == null ">
        	LEFT JOIN ods_tmfx_peculiar_category t
        	on d.sku = t.sku
        </if>
       		left join ods_tmfx_category_industry i
       	<if test="source == null ">
        	on IFNULL(t.category, d.productCateName) = i.category
        </if>
        <if test="source != null ">
        	 on d.productCateName = i.category
        </if>
        and d.brandName = i.brand
        WHERE (state = 0 or state = 3)
        <if test="year!=null and year!=''">
            and d.year = #{year}
        </if>
        <if test="type!=null and type=='m'.toString()">
            and d.month = #{month}
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q1'.toString()">
            and d.month in ('1','2','3')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q2'.toString()">
            and d.month in ('4','5','6')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q3'.toString()">
            and d.month in ('7','8','9')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q4'.toString()">
            and d.month in ('10','11','12')
        </if>
       	 <if test="source != null ">
       		 and d.source = #{source}
       	 </if>
        group by
        d.sellPeople,
        d.brandName,
        i.industry,
        d.sku
    </select>

    <select id="querySummaryVolumeOrAmount" resultMap="BaseResultMap">
        select
        IFNULL(sum(d.number),0) number,
        IFNULL(sum(d.amount),0) amount
        from settlement_invoice_data d
        LEFT JOIN ods_tmfx_peculiar_category t
        on d.sku = t.sku
        left join ods_tmfx_category_industry i
        on IFNULL(t.category, d.productCateName) = i.category
        and d.brandName = i.brand
        WHERE (state = 0 or state = 3)
        <if test="year!=null and year!=''">
            and d.year = #{year,jdbcType=VARCHAR}
        </if>
        <if test="month!=null and month!=''">
            and d.month = #{month,jdbcType=VARCHAR}
        </if>
        <if test="sellpeople!=null and sellpeople!=''">
            and d.sellPeople = #{sellpeople,jdbcType=VARCHAR}
        </if>
        <if test="industry!=null and industry!=''">
            and i.industry = #{industry,jdbcType=VARCHAR}
        </if>
        <if test="brandname!=null and brandname!=''">
            and d.brandName = #{brandname,jdbcType=VARCHAR}
        </if>
        <if test="sku!=null and sku!=''">
            and d.sku = #{sku,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="queryDetailToSummary2" resultMap="BaseResultMap">
        select
        d.sellPeople,
        d.brandName,
        i.industry industry,
        sum(d.number) number,
        sum(d.amount) amount
        from settlement_invoice_data d
        LEFT JOIN ods_tmfx_peculiar_category t
        on d.sku = t.sku
<!--         left join ods_tmfx_category_industry i -->
        
        <if test="source == null ">
        	LEFT JOIN ods_tmfx_peculiar_category t
        	on d.sku = t.sku
        </if>
       		left join ods_tmfx_category_industry i
       	<if test="source == null ">
        	on IFNULL(t.category, d.productCateName) = i.category
        </if>
        <if test="source != null ">
         on d.productCateName = i.category
        </if>
        
<!--         on IFNULL(t.category, d.productCateName) = i.category -->
        and d.brandName = i.brand
        WHERE (state = 0 or state = 3)
        <if test="year!=null and year!=''">
            and d.year = #{year}
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q1'.toString()">
            and d.month in ('1','2','3')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q2'.toString()">
            and d.month in ('4','5','6')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q3'.toString()">
            and d.month in ('7','8','9')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q4'.toString()">
            and d.month in ('10','11','12')
        </if>
         <if test="source != null ">
       		 and d.source = #{source}
       	 </if>
        group by
        d.sellPeople,
        d.brandName,
        i.industry
    </select>


    <insert id="bulkImport" parameterType="java.util.List">
        INSERT  INTO  <include refid="tb" />
        (
        settlementInvoiceQueueId,
        cOrderSn,
        oldcOrderSn,
        sourceOrderSn,
        source,
        sellPeople,
        productCateName,
        brandName,
        sku,
        productName,
        consignee,
        payTime,
        number,
        amount,
        month,
        year,
        isMakeReceipt,
        settlementType,
        success,
        count,
        statusType,
        invoiceTime,
        state,
        busAuditorPeople,
        busAuditorTime,
        finAuditorPeople,
        finAuditorTime,
        pushData,
        returnData,
        lastMessage,
        addTime,
        addPeople,
        modifyTime
        )select * from
        <foreach collection="list" item="opm" separator="union" open="(" close=")" index="index">
            select
            REPLACE(UUID(),'-','') t1,#{opm.ecologyShop,jdbcType=VARCHAR} t2,#{opm.year,jdbcType=VARCHAR} t3,
            #{opm.beginMonth,jdbcType=VARCHAR}t4,#{opm.endMonth,jdbcType=VARCHAR} t5,#{opm.industry,jdbcType=VARCHAR} t6,
            #{opm.sku,jdbcType=VARCHAR} t7,#{opm.modelDes,jdbcType=VARCHAR} t8,#{opm.brand,jdbcType=VARCHAR} t9,
            #{opm.rewardType,jdbcType=VARCHAR} t10,#{opm.type,jdbcType=CHAR} t11,
            #{opm.beginTarget,jdbcType=VARCHAR} t12,#{opm.endTarget,jdbcType=VARCHAR} t13,#{opm.basePoint,jdbcType=DECIMAL} t14,
            #{opm.extraRebate,jdbcType=DECIMAL} t15,#{opm.createBy,jdbcType=VARCHAR} t16,
            #{opm.stepPoint,jdbcType=DECIMAL} t17,#{opm.markPoint,jdbcType=DECIMAL} t18,#{opm.fixedAmount,jdbcType=DECIMAL} t19,
            #{opm.skuStepPoint,jdbcType=DECIMAL} t20,#{opm.amountPoint,jdbcType=DECIMAL} t21,now() t22,'N' t23,'B' t24
            FROM dual
        </foreach>
        t
    </insert>


    <select id="getByCOrderSnAndStatusType" resultMap="BaseResultMap">
        select id,settlementinvoicequeueid,cordersn,oldcordersn,sourceordersn,source,sellpeople,productcatename,brandname,sku,productname,consignee,paytime,number,amount,month,year,ismakereceipt,settlementtype,success,count,statustype,invoicetime,state,busauditorpeople,busauditortime,finauditorpeople,finauditortime,pushdata,returndata,lastmessage,addtime,addpeople,modifytime from settlement_invoice_data
        where cOrderSn=#{cOrderSn} and statusType=#{statusType}
    </select>




    <select id="queryDetailToSummary3" resultMap="BaseResultMap">
        select
        d.sellPeople,
        d.brandName,
        d.sku,
        max(d.productName) productName,
        i.industry industry,
        sum(d.number) number,
        sum(d.amount) amount
        from settlement_invoice_data d
        LEFT JOIN ods_tmfx_peculiar_category t
        on d.sku = t.sku
        left join ods_tmfx_category_industry i
        on IFNULL(t.category, d.productCateName) = i.category
        and d.brandName = i.brand
        WHERE (state = 0 or state = 3)
        <if test="year!=null and year!=''">
            and d.year = #{year}
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q1'.toString()">
            and d.month in ('1','2','3')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q2'.toString()">
            and d.month in ('4','5','6')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q3'.toString()">
            and d.month in ('7','8','9')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q4'.toString()">
            and d.month in ('10','11','12')
        </if>
        group by
        d.sellPeople,
        d.brandName,
        i.industry,
        d.sku,
        d.month
    </select>


    <select id="querySummaryVolumeOrAmountByDate" resultMap="BaseResultMap">
        select
        IFNULL(sum(d.number),0) number,
        IFNULL(sum(d.amount),0) amount
        from settlement_invoice_data d
        LEFT JOIN ods_tmfx_peculiar_category t
        on d.sku = t.sku
        left join ods_tmfx_category_industry i
        on IFNULL(t.category, d.productCateName) = i.category
        and d.brandName = i.brand
        WHERE (state = 0 or state = 3)
        <if test="map.year!=null and map.year!=''">
            and d.year = #{map.year}
        </if>
        <if test="map.beginDate!=null and map.beginDate!=''">
            and d.payTime >= unix_timestamp(#{map.beginDate})
        </if>
        <if test="map.endDate!=null and map.endDate!=''">
            and d.payTime &lt;= unix_timestamp(CONCAT(#{map.endDate},' 23:59:59'))
        </if>
        <if test="map.sellpeople!=null and map.sellpeople!=''">
            and d.sellPeople = #{map.sellpeople,jdbcType=VARCHAR}
        </if>
        <if test="map.industry!=null and map.industry!=''">
            and i.industry = #{map.industry,jdbcType=VARCHAR}
        </if>
        <if test="map.brandname!=null and map.brandname!=''">
            and d.brandName = #{map.brandname,jdbcType=VARCHAR}
        </if>
        <if test="map.sku!=null and map.sku!=''">
            and d.sku = #{map.sku,jdbcType=VARCHAR}
        </if>
    </select>
    
    <select id="getSelections" resultMap="parentSource" >
    	select distinct o.parent from ods_source_dictionary o where 1=1;
    </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Code generated by CodeGen
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.haier.shop.dao.settleCenter.DistributionDetailsDao">
    <resultMap id="BaseResultMap" type="com.haier.shop.model.DistributionDetails">
        <result column="net_sn" property="netSn"/>
        <result column="order_sn" property="orderSn"/>
        <result column="source_order_sn" property="sourceOrderSn"/>
        <result column="ecology_shop" property="ecologyShop"/>
        <result column="category" property="category"/>
        <result column="brand" property="brand"/>
        <result column="sku" property="sku"/>
        <result column="type" property="type"/>
        <result column="consignee_name" property="consigneeName"/>
        <result column="payment_time" property="paymentTime"/>
        <result column="sales_volume" property="salesVolume"/>
        <result column="total_price" property="totalPrice"/>
        <result column="month" property="month"/>
        <result column="year" property="year"/>
        <result column="invoice_time" property="invoiceTime"/>
        <result column="invoice_state" property="invoiceState"/>
        <result column="crteate_time" property="crteateTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="order_source" property="orderSource"/>
        <result column="create_flag" property="createFlag"/>
        <result column="industry" property="industry" />
        
    </resultMap>

    <sql id="tb">
        ods_distribution_details
    </sql>

    <sql id="cols_all">
        <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        net_sn, 
        order_sn, 
        source_order_sn, 
        ecology_shop, 
        category, 
        brand, 
        sku, 
        type, 
        consignee_name, 
        payment_time, 
        sales_volume, 
        total_price, 
        month, 
        year, 
        invoice_time, 
        invoice_state, 
        crteate_time, 
        update_time, 
        order_source, 
        create_flag
        
    </sql>

    <sql id="vals">
        #{netSn}, 
        #{orderSn}, 
        #{sourceOrderSn}, 
        #{ecologyShop}, 
        #{category}, 
        #{brand}, 
        #{sku}, 
        #{type}, 
        #{consigneeName}, 
        #{paymentTime}, 
        #{salesVolume}, 
        #{totalPrice}, 
        #{month}, 
        #{year}, 
        #{invoiceTime}, 
        #{invoiceState}, 
        #{crteateTime}, 
        #{updateTime}, 
        #{orderSource}, 
        #{createFlag}
        
    </sql>

    <sql id="criteria">
        <if test="netSn != null">AND net_sn = #{netSn}</if>
        <if test="orderSn != null">AND order_sn = #{orderSn}</if>
        <if test="sourceOrderSn != null">AND source_order_sn = #{sourceOrderSn}</if>
        <if test="ecologyShop != null">AND ecology_shop = #{ecologyShop}</if>
        <if test="category != null">AND category = #{category}</if>
        <if test="brand != null">AND brand = #{brand}</if>
        <if test="sku != null">AND sku = #{sku}</if>
        <if test="type != null">AND type = #{type}</if>
        <if test="consigneeName != null">AND consignee_name = #{consigneeName}</if>
        <if test="paymentTime != null">AND payment_time = #{paymentTime}</if>
        <if test="salesVolume != null">AND sales_volume = #{salesVolume}</if>
        <if test="totalPrice != null">AND total_price = #{totalPrice}</if>
        <if test="month != null">AND month = #{month}</if>
        <if test="year != null">AND year = #{year}</if>
        <if test="invoiceTime != null">AND invoice_time = #{invoiceTime}</if>
        <if test="invoiceState != null">AND invoice_state = #{invoiceState}</if>
        <if test="crteateTime != null">AND crteate_time = #{crteateTime}</if>
        <if test="updateTime != null">AND update_time = #{updateTime}</if>
        <if test="orderSource != null">AND order_source = #{orderSource}</if>
        <if test="createFlag != null">AND create_flag = #{createFlag}</if>
        
    </sql>

    <insert id="create" parameterType="com.haier.shop.model.DistributionDetails">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <insert id="creates" parameterType="list">
        INSERT INTO <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        <foreach collection="list" separator="," item="item">
            (
            #{item.netSn}, 
            #{item.orderSn}, 
            #{item.sourceOrderSn}, 
            #{item.ecologyShop}, 
            #{item.category}, 
            #{item.brand}, 
            #{item.sku}, 
            #{item.type}, 
            #{item.consigneeName}, 
            #{item.paymentTime}, 
            #{item.salesVolume}, 
            #{item.totalPrice}, 
            #{item.month}, 
            #{item.year}, 
            #{item.invoiceTime}, 
            #{item.invoiceState}, 
            #{item.crteateTime}, 
            #{item.updateTime}, 
            #{item.orderSource}, 
            #{item.createFlag}
            
            )
        </foreach>
    </insert>

    <select id="loadByNetSn"  resultMap="BaseResultMap" >
        SELECT <include refid="cols_all" /> FROM <include refid="tb" />
        WHERE net_sn = #{netSn}
    </select>

    <update id="update" parameterType="com.haier.shop.model.DistributionDetails">
        UPDATE <include refid="tb"/>
        <set>
            <if test="orderSn != null">order_sn = #{orderSn},</if>
            <if test="sourceOrderSn != null">source_order_sn = #{sourceOrderSn},</if>
            <if test="ecologyShop != null">ecology_shop = #{ecologyShop},</if>
            <if test="category != null">category = #{category},</if>
            <if test="brand != null">brand = #{brand},</if>
            <if test="sku != null">sku = #{sku},</if>
            <if test="type != null">type = #{type},</if>
            <if test="consigneeName != null">consignee_name = #{consigneeName},</if>
            <if test="paymentTime != null">payment_time = #{paymentTime},</if>
            <if test="salesVolume != null">sales_volume = #{salesVolume},</if>
            <if test="totalPrice != null">total_price = #{totalPrice},</if>
            <if test="month != null">month = #{month},</if>
            <if test="year != null">year = #{year},</if>
            <if test="invoiceTime != null">invoice_time = #{invoiceTime},</if>
            <if test="invoiceState != null">invoice_state = #{invoiceState},</if>
            <if test="crteateTime != null">crteate_time = #{crteateTime},</if>
            <if test="orderSource != null">order_source = #{orderSource},</if>
            <if test="createFlag != null">create_flag = #{createFlag},</if>

            update_time=now()
        </set>
        WHERE net_sn = #{netSn}
    </update>

    <delete id="delete" >
        DELETE FROM <include refid="tb"/>
        WHERE net_sn = #{netSn}
    </delete>

    <delete id="deletes" parameterType="list">
        DELETE FROM <include refid="tb"/>
        WHERE net_sn IN
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
        </foreach>
    </delete>

    <select id="list" parameterType="com.haier.shop.model.DistributionDetails" resultMap="BaseResultMap">
        SELECT <include refid="cols_all"/> FROM <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>


    <sql id="pagingSql" >
        from <include refid="tb" /> t

    </sql>
    <sql id="pagingWhere">
        <where>
            1=1
            <if test="param.ecologyShop!=null and param.ecologyShop!=''">
                and ECOLOGY_SHOP = #{param.ecologyShop,jdbcType=VARCHAR}
            </if>
            <if test="param.year!=null and param.year!=''">
                and YEAR = #{param.year,jdbcType=VARCHAR}
            </if>
            <if test="param.month!=null and param.month!=''">
                and MONTH = #{param.month,jdbcType=VARCHAR}
            </if>
            <if test="param.orderSource!=null and param.orderSource!=''">
                and  ORDER_SOURCE = #{param.orderSource,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>
    <select id="count" parameterType="map" resultType="long">
        select  count(1)
        <include refid="pagingSql" />
        <include refid="pagingWhere" />
    </select>
    <select id="paging"   resultMap="BaseResultMap" >
        select
        <include refid="cols_all"/>
        <include refid="pagingSql" />
        <include refid="pagingWhere" />
        order by
        <!--        <if test="sort !=null and sort !=''">
                    ${sort} ${order},
                </if>-->
        crteate_time desc
        LIMIT #{page.start}, #{page.pageSize}

    </select>



    <select id="export"   resultType="map" >
        select
        net_sn,
        order_sn,
        source_order_sn,
        ecology_shop,
        category,
        brand,
        sku,
        type,
        consignee_name,
        payment_time,
        sales_volume,
        total_price,
        month,
        year,
        invoice_time,
        invoice_state,
        crteate_time,
        update_time,
        order_source,
        create_flag
        <include refid="pagingSql" />
        <include refid="pagingWhere" />
        order by
        <!--        <if test="sort !=null and sort !=''">
                    ${sort} ${order},
                </if>-->
        crteate_time desc


    </select>


    <select id="queryDetailToSummary" resultMap="BaseResultMap">
        select
        d.ecology_shop,
        d.brand,
        d.sku,
        max(d.type) type,
        i.industry industry,
        sum(d.sales_volume) sales_volume,
        sum(d.total_price) total_price
        from ods_distribution_details d
        left join ods_tmfx_category_industry i
        on d.category = i.category
        and d.brand = i.brand
        WHERE 1=1
        <if test="year!=null and year!=''">
            and d.year = #{year}
        </if>
        <if test="type!=null and type=='m'.toString()">
            and d.month = #{month}
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q1'.toString()">
            and d.month in ('1','2','3')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q2'.toString()">
            and d.month in ('4','5','6')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q3'.toString()">
            and d.month in ('7','8','9')
        </if>
        <if test="type!=null and type=='q'.toString() and month!=null and month=='Q4'.toString()">
            and d.month in ('10','11','12')
        </if>
        group by
        d.ecology_shop,
        d.brand,
        i.industry,
        d.sku
    </select>

    <select id="querySummaryVolumeOrAmount" resultMap="BaseResultMap">
        select
        nvl(sum(d.sales_volume),0)sales_volume,
        nvl(sum(d.total_price),0)total_price
        from ods_distribution_details d
        left join ods_tmfx_category_industry i
        on d.category = i.category
        and d.brand = i.brand
        WHERE 1=1
        <if test="year!=null and year!=''">
            and d.year = #{year,jdbcType=VARCHAR}
        </if>
        <if test="month!=null and month!=''">
            and d.month = #{month,jdbcType=VARCHAR}
        </if>
        <if test="ecologyShop!=null and ecologyShop!=''">
            and d.ecology_shop = #{ecologyShop,jdbcType=VARCHAR}
        </if>
        <if test="industry!=null and industry!=''">
            and i.industry = #{industry,jdbcType=VARCHAR}
        </if>
        <if test="brand!=null and brand!=''">
            and d.brand = #{brand,jdbcType=VARCHAR}
        </if>
        <if test="sku!=null and sku!=''">
            and d.sku = #{sku,jdbcType=VARCHAR}
        </if>
    </select>

</mapper>
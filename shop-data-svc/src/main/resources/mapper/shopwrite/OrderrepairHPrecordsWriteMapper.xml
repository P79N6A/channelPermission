<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.shop.dao.shopwrite.OrderrepairHPrecordsWriteDao" >
	<resultMap id="BaseResult" type="com.haier.shop.model.ProductToIndustry">
		<result property="sign" column="sign" />
		<result property="reject" column="reject" />
		<result property="parentPath" column="parentPath" />
	</resultMap>
  <insert id="insert" parameterType="com.haier.shop.model.OrderrepairHPrecords" >
    insert into OrderRepairHPRecords (id, siteId, addTime, 
      orderProductId, orderRepairId, netPointCode, 
      checkResult, quality, machineNum, 
      inspector, inspectTime, success, 
      checkType, packResult, response, 
      hpOrderFail, source, woId, 
      hpOrderRemark,repairsHPLogsId)
    values (#{id,jdbcType=INTEGER}, #{siteId,jdbcType=INTEGER}, #{addTime,jdbcType=INTEGER}, 
      #{orderProductId,jdbcType=INTEGER}, #{orderRepairId,jdbcType=INTEGER}, #{netPointCode,jdbcType=VARCHAR}, 
      #{checkResult,jdbcType=TINYINT}, #{quality,jdbcType=TINYINT}, #{machineNum,jdbcType=VARCHAR}, 
      #{inspector,jdbcType=VARCHAR}, #{inspectTime,jdbcType=VARCHAR}, #{success,jdbcType=TINYINT}, 
      #{checkType,jdbcType=TINYINT}, #{packResult,jdbcType=TINYINT}, #{response,jdbcType=TINYINT}, 
      #{hpOrderFail,jdbcType=TINYINT}, #{source,jdbcType=VARCHAR}, #{woId,jdbcType=VARCHAR}, 
      #{hpOrderRemark,jdbcType=LONGVARCHAR},#{repairsHPLogsId,jdbcType=INTEGER})
  </insert>
  
  
 

<select id="findBadProductCount" resultType="Integer" parameterType="java.lang.String">
SELECT IFNULL(count(*),0) from Orders o  
LEFT JOIN OrderProducts opro
on opro.orderid = o.id
LEFT JOIN OrderRepairHPRecords orhp
on orhp.orderProductId = opro.id
where (orhp.quality='5' or orhp.quality='6') and FROM_UNIXTIME(o.addtime)  between #{begintime} and #{endtime}
  </select>


<select id="findsign" resultMap="BaseResult" >
		SELECT IFNULL(count(opro.productType),0) sign,
		pc.parentPath
		 from Orders o  
		LEFT JOIN OrderProducts opro
		on opro.orderid = o.id
		LEFT JOIN OrderRepairHPRecords orhp
		on orhp.orderProductId = opro.id
		LEFT JOIN OrderRepairs ore 
		on opro.id = ore.orderProductId
		LEFT JOIN ProductTypes pt
		on pt.attrCateId = opro.productType
		LEFT JOIN ProductCates pc
		on pc.cateName = pt.typeName
		where (quality='5' or quality='6') and ore.typeFlag = '5' 
  </select>
  <select id="findreject" resultMap="BaseResult" >
		SELECT IFNULL(count(opro.productType),0) reject,
		pc.parentPath 
		from Orders o  
		LEFT JOIN OrderProducts opro
		on opro.orderid = o.id
		LEFT JOIN OrderRepairHPRecords orhp
		on orhp.orderProductId = opro.id
		LEFT JOIN OrderRepairs ore 
		on opro.id = ore.orderProductId
		LEFT JOIN ProductTypes pt
		on pt.attrCateId = opro.productType
		LEFT JOIN ProductCates pc
		on pc.cateName = pt.typeName
		where (quality='5' or quality='6') and ore.typeFlag = '4' 
  </select>
  
<update id="updataRepaiHp" parameterType="com.haier.shop.model.OrderrepairHPrecords">
	UPDATE OrderRepairHPRecords
	SET 
	<if test="ThreeAppraisal!=null and ThreeAppraisal !=''">
	 ThreeAppraisal = #{ThreeAppraisal,jabcType=VARCHAR},
	 ThreeAppraisalDate = curdate(),
	</if>
	 <if test="TwoAppraisal!=null and TwoAppraisal!=''">
	 TwoAppraisal =#{TwoAppraisal},
	 TwoAppraisalDate = curdate(),
	</if>
	 checkType = #{checkType}
	WHERE
		id = #{id}
</update>
  
	<update id="updataOutOfStorage" parameterType="java.lang.String">
	UPDATE OrderRepairHPRecords
	SET OutOfStorageFlag =#{OutOfStorageFlag},
	 OutOfStorageTime = unix_timestamp(now())
	where id=#{id}
	</update>
</mapper>
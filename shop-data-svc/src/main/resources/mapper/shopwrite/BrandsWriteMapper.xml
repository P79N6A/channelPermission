<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.shop.dao.shopwrite.BrandsWriteDao">

	<insert id="addProduct" parameterType="java.util.Map">
		insert into orders (isProduceDaily,
							  source ,
							  sourceOrderSn,
							  province,
							  city,
							  region,
							  address,
							  consignee,
							  zipcode,
							  mobile,
							  phone,
							  isTogether,
							  addTime,
							  remark,
							  relationOrderSn,
							  isTest,
							  isCod,
							  notAutoConfirm,
							  memberId,
							  memberEmail,
							  syncTime,
							  orderStatus,
							  payTime,
							  paymentStatus,
							  receiptConsignee,
							  receiptAddress,
							  receiptZipcode,
							  receiptMobile,
							  productAmount,
							  orderAmount,
							  paidAmount,
							  shippingAmount,
							  totalEsAmount,
							  paymentCode,
							  payBankCode,
							  paymentName,
							  originRegionName,
							  originAddress,
							  street,
							  markBuilding,
							  poiId,
							  poiName,
							  regionName,
							  receiptInfo,
							  delayShipTime,
							  firstConfirmTime,
							  firstConfirmPerson,
							  signCode,
							  orderType,
							  memberInvoiceId,
							  taobaoGroupId,
							  tradeType,
							  stepTradeStatus,
							  stepPaidFee,
							  depositAmount,
							  balanceAmount,
							  autoCancelDays,
							  isNoLimitStockOrder,
							  autoConfirmNum,
							  smConfirmTime,
							  orderSn,
							  idGift,
								isBackend,
								agent)
		values (#{map.isProduceDaily},
				 #{map.source},
				  #{map.sourceOrderSn},
				  #{map.province} ,
				  #{map.citys} ,
				  #{map.county} ,
				  #{map.address},
				  #{map.consignee},
				  #{map.zipcode},
				  #{map.mobile},
				  #{map.phone},
				  #{map.productInvoiceTogether},
				  #{map.addTime},
				  #{map.remark},
				  #{map.connectOrderNum},
				  #{map.isTest},
				  #{map.isCod},
				  #{map.notAutoConfirm},
			 	  #{map.memberId},
			 	  #{map.memberEmail},
			 	  #{map.syncTime},
			 	  #{map.orderStatus},
			 	  #{map.payTime},
			 	  #{map.paymentStatus},
				  #{map.receiptConsignee},
				  #{map.receiptAddress},
				  #{map.receiptZipcode},
				  #{map.receiptMobile},
				  #{map.productAmount},
				  #{map.orderAmount},
				  #{map.paidAmount},
				  #{map.shippingAmount},
				  #{map.totalEsAmount},
				  #{map.paymentCode},
				  #{map.payBankCode},
				  #{map.paymentName},
				  #{map.originRegionName},
				  #{map.originAddress},
				  #{map.street},
				  #{map.markBuilding},
				  #{map.poiId},
				  #{map.poiName},
				  #{map.regionName},
				  #{map.receiptInfo},
				  #{map.delayShipTime},
				  #{map.firstConfirmTime},
				  #{map.firstConfirmPerson},
				  #{map.signCode},
				  #{map.orderType},
				  #{map.memberInvoiceId},
				  #{map.taobaoGroupId},
				  #{map.tradeType},
				  #{map.stepTradeStatus},
				  #{map.stepPaidFee},
				  #{map.depositAmount},
				  #{map.balanceAmount},
				  #{map.autoCancelDays},
				  #{map.isNoLimitStockOrder},
				  #{map.autoConfirmNum},
				  #{map.smConfirmTime},
				  #{map.orderSn},
				  #{map.idGift},
					1, #{map.agent})
	</insert>

	<insert id="addProduct1" parameterType="java.util.Map">
		insert into memberinvoices(orderId,invoiceTitle, electricFlag, invoiceType,memberName,taxPayerNumber,registerAddress,
		registerPhone,bankName,bankCardNumber,state,auditor,remark,isLock,parentId,addTime)
		values (#{map.orderId},#{map.invoiceTitle}, #{map.isElectronicInvoice},#{map.InvoiceContent},#{map.memberName},
		#{map.taxPayerNumber},#{map.registerAddress}, #{map.registerPhone},#{map.bankName},#{map.bankCardNumber},
		#{map.state},#{map.auditor}, #{map.remarks},#{map.isLock},#{map.parentId},#{map.addTime})
	</insert>
	<insert id="addProduct2" parameterType="com.haier.shop.dto.Merchandise" >
		insert into orderproducts(orderId , productId  , productName,price , esAmount ,number ,shippingFee ,sku,
		isTest,supportOneDayLimit,cOrderSn,cPaymentStatus,cPayTime,productType,lockedNumber,unlockedNumber,
		productAmount,couponAmount,cateId,brandId,netPointId,settlementStatus,receiptOrRejectTime,isWmsSku,
		sCode,status,invoiceNumber,expressName,invoiceExpressNumber,shippingTime,lessOrderSn,waitGetLesShippingInfo,
		getLesShippingCount,outping,lessShipTime,closeTime,receiptNum,receiptAddTime,makeReceiptType,shippingMode,
		lastTimeForShippingMode,lastEditorForShippingMode,systemRemark,externalSaleSettingId,isNoLimitStockProduct,
		splitFlag,splitRelateCOrderSn,addtime,isReceipt)
		values (#{Merchandise.orderId}, #{Merchandise.id },#{Merchandise.productName},#{Merchandise.saleGuidePrice },
		#{Merchandise.esAmount}, #{Merchandise.number},#{Merchandise.freight },#{Merchandise.sku},#{Merchandise.isTest},
		#{Merchandise.supportOneDayLimit}, #{Merchandise.cOrderSn},#{Merchandise.cPaymentStatus},#{Merchandise.cPayTime},
		#{Merchandise.productType}, #{Merchandise.lockedNumber},#{Merchandise.unlockedNumber},#{Merchandise.productAmount},
		#{Merchandise.couponAmount}, #{Merchandise.cateId},#{Merchandise.brandId},#{Merchandise.netPointId},
		#{Merchandise.settlementStatus}, #{Merchandise.receiptOrRejectTime},#{Merchandise.isWmsSku},#{Merchandise.sCode},
		#{Merchandise.status}, #{Merchandise.invoiceNumber},#{Merchandise.expressName},#{Merchandise.invoiceExpressNumber},
		#{Merchandise.shippingTime}, #{Merchandise.lessOrderSn},#{Merchandise.waitGetLesShippingInfo},#{Merchandise.getLesShippingCount},
		#{Merchandise.outping},#{Merchandise.lessShipTime},#{Merchandise.closeTime},#{Merchandise.receiptNum},
		#{Merchandise.receiptAddTime},#{Merchandise.makeReceiptType},#{Merchandise.shippingMode},#{Merchandise.lastTimeForShippingMode},
		#{Merchandise.lastEditorForShippingMode},#{Merchandise.systemRemark},#{Merchandise.externalSaleSettingId},
		#{Merchandise.isNoLimitStockProduct},#{Merchandise.splitFlag},#{Merchandise.splitRelateCOrderSn},CURRENT_TIMESTAMP(),1)
	</insert>

	<insert id="insertSelective" parameterType="com.haier.shop.dto.Merchandise">
		insert into orders (
		isProduceDaily,
		source ,
		sourceOrderSn,
		province,
		city,
		region,
		address,
		consignee,
		zipcode,
		mobile,
		phone,
		isTogether,
		addTime,
		remark,
		relationOrderSn,
		isTest,
		isCod,
		notAutoConfirm,
		memberId,
		memberEmail,
		syncTime,
		orderStatus,
		payTime,
		paymentStatus,
		receiptConsignee,
		receiptAddress,
		receiptZipcode,
		receiptMobile,
		productAmount,
		orderAmount,
		paidAmount,
		shippingAmount,
		totalEsAmount,
		paymentCode,
		payBankCode,
		paymentName,
		originRegionName,
		originAddress,
		street,
		markBuilding,
		poiId,
		poiName,
		regionName,
		receiptInfo,
		delayShipTime,
		firstConfirmTime,
		firstConfirmPerson,
		signCode,
		orderType,
		memberInvoiceId,
		taobaoGroupId,
		tradeType,
		stepTradeStatus,
		stepPaidFee,
		depositAmount,
		balanceAmount,
		autoCancelDays,
		isNoLimitStockOrder,
		autoConfirmNum,
		smConfirmTime,
		orderSn,
		idGift,
		isBackend,
		agent)
		values (#{mer.isProduceDaily},
		#{mer.source},
		#{mer.sourceOrderSn},
		#{mer.provinceid},
		#{mer.cityid},
		#{mer.regionid},
		#{mer.address},
		#{mer.consignee},
		#{mer.zipcode},
		#{mer.mobile},
		#{mer.phone},
		#{mer.isTogether},
		#{mer.addTime},
		#{mer.remark1},
		#{mer.relationOrderSn},
		#{mer.isTest1},
		#{mer.isCod},
		#{mer.notAutoConfirm},
		#{mer.memberId},
		#{mer.memberEmail},
		#{mer.syncTime},
		#{mer.orderStatus},
		#{mer.payTime},
		#{mer.paymentStatus},
		#{mer.receiptConsignee},
		#{mer.receiptAddress},
		#{mer.receiptZipcode},
		#{mer.receiptMobile},
		#{mer.productAmount},
		#{mer.orderAmount},
		#{mer.paidAmount},
		#{mer.shippingAmount},
		#{mer.totalEsAmount},
		#{mer.paymentCode},
		#{mer.payBankCode},
		#{mer.paymentName},
		#{mer.originRegionName},
		#{mer.originAddress},
		#{mer.street},
		#{mer.markBuilding},
		#{mer.poiId},
		#{mer.poiName},
		#{mer.regionName},
		#{mer.receiptInfo},
		#{mer.delayShipTime},
		#{mer.firstConfirmTime},
		#{mer.firstConfirmPerson},
		#{mer.signCode},
		#{mer.orderType},
		#{mer.memberInvoiceId},
		#{mer.taobaoGroupId},
		#{mer.tradeType},
		#{mer.stepTradeStatus},
		#{mer.stepPaidFee},
		#{mer.depositAmount},
		#{mer.balanceAmount},
		#{mer.autoCancelDays},
		#{mer.isNoLimitStockOrder},
		#{mer.autoConfirmNum},
		#{mer.smConfirmTime},
		#{mer.orderSn},
		#{mer.idGift},
		1,
		#{mer.agent})
	</insert>

	<insert id="insertSelective1"  parameterType="com.haier.shop.dto.Merchandise">
		insert into memberinvoices(
		orderId,
		invoiceTitle,
		electricFlag,
		invoiceType,
		memberName,
		taxPayerNumber,
		registerAddress,
		registerPhone,
		bankName,
		bankCardNumber,
		state,
		auditor,
		remark,
		isLock,
		parentId,
		addTime
		)
		values (
		#{mer.orderId},
		#{mer.invoiceTitle},
		#{mer.electricFlag},
		#{mer.invoiceType},
		#{mer.memberName},
		#{mer.taxPayerNumber},
		#{mer.registerAddress},
		#{mer.registerPhone},
		#{mer.bankName},
		#{mer.bankCardNumber},
		#{mer.state},
		#{mer.auditor},
		#{mer.remark},
		#{mer.isLock},
		#{mer.parentId},
		#{mer.addTime1})
	</insert>


	<insert id="insertSelective2" parameterType="com.haier.shop.dto.Merchandise">
		insert into orderproducts
		(orderId ,
		 productId  ,
		 productName,
		 price ,
		 couponCodeValue,
		 esAmount ,
		 number ,
		 shippingFee ,
		 sku,
		isTest,
		supportOneDayLimit,
		cOrderSn,
		cPaymentStatus,
		cPayTime,
		productType,
		lockedNumber,
		unlockedNumber,
		productAmount,
		couponAmount,
		cateId,
		brandId,
		netPointId,
		settlementStatus,
		receiptOrRejectTime,
		isWmsSku,
		sCode,
		status,
		invoiceNumber,
		expressName,
		invoiceExpressNumber,
		shippingTime,
		lessOrderSn,
		waitGetLesShippingInfo,
		getLesShippingCount,
		outping,
		lessShipTime,
		closeTime,
		receiptNum,
		receiptAddTime,
		makeReceiptType,
		shippingMode,
		lastTimeForShippingMode,
		lastEditorForShippingMode,
		systemRemark,
		externalSaleSettingId,
		isNoLimitStockProduct,
		splitFlag,
		splitRelateCOrderSn,
		isReceipt,
		addTime)
		values (
		#{mer.orderId},
		#{mer.id},
		#{mer.productName} ,
		#{mer.saleGuidePrice },
		#{mer.couponCodeValue },
		#{mer.esAmount},
		#{mer.number},
		#{mer.freight },
		#{mer.sku},
		#{mer.isTest},
		#{mer.supportOneDayLimit},
		#{mer.cOrderSn},
		#{mer.cPaymentStatus},
		#{mer.cPayTime},
		#{mer.productType},
		#{mer.lockedNumber},
		#{mer.unlockedNumber},
		#{mer.productAmount},
		#{mer.couponAmount},
		#{mer.cateId},
		#{mer.brandId},
		#{mer.netPointId},
		#{mer.settlementStatus},
		#{mer.receiptOrRejectTime},
		#{mer.isWmsSku},
		#{mer.sCode},
		#{mer.status},
		#{mer.invoiceNumber},
		#{mer.expressName},
		#{mer.invoiceExpressNumber},
		#{mer.shippingTime},
		#{mer.lessOrderSn},
		#{mer.waitGetLesShippingInfo},
		#{mer.getLesShippingCount},
		#{mer.outping},
		#{mer.lessShipTime},
		#{mer.closeTime},
		#{mer.receiptNum},
		#{mer.receiptAddTime},
		#{mer.makeReceiptType},
		#{mer.shippingMode},
		#{mer.lastTimeForShippingMode},
		#{mer.lastEditorForShippingMode},
		#{mer.systemRemark},
		#{mer.externalSaleSettingId},
		#{mer.isNoLimitStockProduct},
		#{mer.splitFlag},
		#{mer.splitRelateCOrderSn},1,
		CURRENT_TIMESTAMP())
	</insert>

	<select id="province" parameterType="String" resultType="Integer">
		SELECT id from regions where regionName = #{province}% and parentPath = #{str} limit 1
	</select>
	<select id="city" parameterType="String" resultType="Integer">
		SELECT id from regions where regionName = #{city}% and parentPath = #{str} limit 1
	</select>
	<select id="region" parameterType="String" resultType="Integer">
		SELECT id from regions where regionName = #{region}% and parentPath = #{str} limit 1
	</select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.shop.dao.shopwrite.InvoiceApiLogsWriteDao">

    <insert id="insert" parameterType="com.haier.shop.model.InvoiceApiLogs">
        insert into `InvoiceApiLogs`(`orderProductId`,`cOrderSn`,`invoiceId`,`type`,`pushData`,`returnData`,`receiveData`,`isSuccess`,`lastTime`,`lastMessage`,`countNum`,`addTime`)
        values(#{orderProductId},#{cOrderSn},#{invoiceId},#{type},#{pushData},#{returnData},#{receiveData},#{isSuccess},unix_timestamp(now()),#{lastMessage},#{countNum},unix_timestamp(now()))
    </insert>

    <update id="update" parameterType="com.haier.shop.model.InvoiceApiLogs">
        update `InvoiceApiLogs` set `orderProductId`=#{orderProductId},`cOrderSn`=#{cOrderSn},`invoiceId`=#{invoiceId},`type`=#{type},`pushData`=#{pushData},`returnData`=#{returnData},`receiveData`=#{receiveData},`addTime`=#{addTime},`isSuccess`=#{isSuccess},`lastTime`=#{lastTime}
        <if test="countNum != null and countNum !=''">
            ,`countNum`=#{countNum}
        </if>
        where `id`=#{id}
    </update>
    <update id="updateByInvoiceIdAndType" parameterType="com.haier.shop.model.InvoiceApiLogs">
        update `InvoiceApiLogs` set `orderProductId`=#{orderProductId},`cOrderSn`=#{cOrderSn},`pushData`=#{pushData},`returnData`=#{returnData},`receiveData`=#{receiveData},`addTime`=#{addTime},`isSuccess`=#{isSuccess},`lastTime`=#{lastTime}
        <if test="countNum != null and countNum !=''">
            ,`countNum`=#{countNum}
        </if>
        where `invoiceId`=#{invoiceId} and `type`=#{type} order by id desc limit 1
    </update>
</mapper>
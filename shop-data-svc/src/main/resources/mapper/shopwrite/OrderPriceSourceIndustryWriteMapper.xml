<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.shop.dao.shopwrite.OrderPriceSourceIndustryWriteDao">

	<resultMap id="orderPriceSourceIndustryResult" type="com.haier.shop.model.OrderPriceSourceIndustry">
		<result property="id" column="id" />
		<result property="industryCode" column="industry_code" />
		<result property="industryName" column="industry_name" />
		<result property="orderSource" column="order_source" />
		<result property="orderSourceName" column="order_source_name" />
		<result property="status" column="status" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>

	<insert id="createOrderPriceSourceIndustry" parameterType="com.haier.shop.model.OrderPriceSourceIndustry">
		insert into `order_price_source_industry`
		(`industry_code`,`industry_name`,`order_source`,`order_source_name`,status,`create_time`,`update_time`)
		select
		#{industryCode},#{industryName},#{orderSource},#{orderSourceName},#{status},now(),now()
		from
		dual
		where not exists (select 1 from order_price_source_industry where industry_code = #{industryCode} and order_source = #{orderSource} )
	</insert>

	<update id="updateOrderPriceSourceIndustry" parameterType="com.haier.shop.model.OrderPriceSourceIndustry">
		update `order_price_source_industry`
		set status=#{status},update_time=now()
		where `id` = #{id}
	</update>

	<delete id="deleteOrderPriceSourceIndustryById" parameterType="Integer" statementType="PREPARED">
		delete
		from
		`order_price_source_industry`
		where
		`id`= #{id}
	</delete>
</mapper>
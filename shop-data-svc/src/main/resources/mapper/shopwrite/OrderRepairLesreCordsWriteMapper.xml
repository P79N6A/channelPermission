<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haier.shop.dao.shopwrite.OrderRepairLESRecordsWriteDao" >
	<insert id="insert"  parameterType="com.haier.shop.model.OrderRepairLESRecords">
		insert into `OrderRepairLESRecords`(
				<if test="siteId != null">
					`siteId`,
				</if>
				<if test="orderProductId != null">
					`orderProductId`,
				</if>
				<if test="orderRepairId != null">
					`orderRepairId`,
				</if>
				<if test="recordSn != null">
					`recordSn`,
				</if>
				<if test="operate != null">
					`operate`,
				</if>
				<if test="storageType != null">
					`storageType`,
				</if>
				<if test="lesOrderSn != null">
					`lesOrderSn`,
				</if>
				<if test="lesOutPing != null">
					`lesOutPing`,
				</if>
				<if test="lesOutPingTime != null">
					`lesOutPingTime`,
				</if>
				<if test="lesOrderSnTime != null">
					`lesOrderSnTime`,
				</if>
				<if test="sCode != null">
					`sCode`,
				</if>
				<if test="success != null">
					`success`,
				</if>
				<if test="opCancelFlag != null">
					`opCancelFlag`,
				</if>
					`addTime`
		) VALUES
		(
				<if test="siteId != null">
					#{siteId},
				</if>
				<if test="orderProductId != null">
					#{orderProductId},
				</if>
				<if test="orderRepairId != null">
					#{orderRepairId},
				</if>
				<if test="recordSn != null">
					#{recordSn},
				</if>
				<if test="operate != null">
					#{operate},
				</if>
				<if test="storageType != null">
					#{storageType},
				</if>
				<if test="lesOrderSn != null">
					#{lesOrderSn},
				</if>
				<if test="lesOutPing != null">
					#{lesOutPing},
				</if>
				<if test="lesOutPingTime != null">
					#{lesOutPingTime},
				</if>
				<if test="lesOrderSnTime != null">
					#{lesOrderSnTime},
				</if>
				<if test="sCode != null">
					#{sCode},
				</if>
				<if test="success != null">
					#{success},
				</if>
				<if test="opCancelFlag != null">
					#{opCancelFlag},
				</if>
					unix_timestamp(now()) 
		)
		<selectKey resultType="Integer" keyProperty="id" order="AFTER" 
		statementType="STATEMENT">select last_insert_id()</selectKey>
	</insert>
	<update id="updateAfterLesInStorage" parameterType="com.haier.shop.model.OrderRepairLESRecords">
		update `OrderRepairLESRecords` set `lesOutPing`=#{lesOutPing},`lesOutPingTime`= unix_timestamp()
		where `id` = #{id}
	</update>
	<update id="updateLesRecordAfterJLIN" parameterType="com.haier.shop.model.OrderRepairLESRecords">
		update `OrderRepairLESRecords` set `lesOutPing`=#{lesOutPing},`lesOutPingTime`= #{lesOutPingTime}
		where `id` = #{id}
	</update>												  
	<update id="updateAfterVomAccepted" parameterType="com.haier.shop.model.OrderRepairLESRecords">
        UPDATE `OrderRepairLESRecords`
        SET `lesOrderSnTime` = #{lesOrderSnTime}, `lesOrderSn` = #{lesOrderSn}
        WHERE `id` = #{id}
    </update>
    <update id="updateOpCancelFlag" parameterType="com.haier.shop.model.OrderRepairLESRecords">
    	UPDATE `OrderRepairLESRecords`
        SET `opCancelFlag` = #{opCancelFlag}
        WHERE `id` = #{id}
    </update>
    
    <update id="updataRecords" parameterType="com.haier.shop.model.OrderRepairLESRecords">
		update OrderRepairLESRecords set
			failReason=#{failReason},
			PushFailNumber=#{pushFailNumber},
			falg=#{flag}
		where `id` = #{id}
	</update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.haier.eis.dao.eis.LesStatusItemDao">
    <resultMap id="lesStatusItemResult" type="com.haier.eis.model.LesStatusItem" >
        <result property="id" column="id" />
        <result property="lesStockSyncsId" column="les_stock_syncs_id" />
        <result property="corderSn" column="corder_sn" />
        <result property="outping" column="outping" />
        <result property="updTime" column="upd_time" />
        <result property="invoiceNumber" column="invoicen_nmber" />
        <result property="invoiceName" column="invoice_name" />
        <result property="itype" column="itype" />
        <result property="data" column="data" />
        <result property="status" column="status" />
        <result property="releaseStatus" column="release_status" />
        <result property="processTime" column="process_time" />
        <result property="addTime" column="add_time" />
        <result property="errorMessage" column="error_message" />
        <result property="versionCode" column="version_code" />
        <result property="channelCode" column="channel_code"/>
    </resultMap>
    <select id="getNotProcessList" parameterType="Integer" resultMap="lesStatusItemResult">
        select `id`,`les_stock_syncs_id`,`corder_sn`,`outping`,`upd_time`,`invoicen_nmber`,`invoice_name`,`itype`,`data`,`status`,`release_status`,`process_time`,`add_time`,`error_message`,`version_code`,`channel_code`
        from `les_status_item`
        where `status` = 0
        limit 1000
    </select>
    <update id="updateAfterProcessed" parameterType="com.haier.eis.model.LesStatusItem">
        update `les_status_item` set `status`=#{status},`release_status`=#{releaseStatus},`process_time`=unix_timestamp(),`error_message`=#{errorMessage}
        where `id` = #{id} and `status` = 0
    </update>

</mapper>
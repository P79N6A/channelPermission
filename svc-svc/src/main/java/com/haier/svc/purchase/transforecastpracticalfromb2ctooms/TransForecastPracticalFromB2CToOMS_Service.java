package com.haier.svc.purchase.transforecastpracticalfromb2ctooms;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2016-01-28T16:07:59.694+08:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "TransForecastPracticalFromB2CToOMS", 
                  wsdlLocation = "TransForecastPracticalFromB2CToOMS.wsdl",
                  targetNamespace = "http://www.example.org/TransForecastPracticalFromB2CToOMS/") 
public class TransForecastPracticalFromB2CToOMS_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.example.org/TransForecastPracticalFromB2CToOMS/", "TransForecastPracticalFromB2CToOMS");
    public final static QName TransForecastPracticalFromB2CToOMSSOAP = new QName("http://www.example.org/TransForecastPracticalFromB2CToOMS/", "TransForecastPracticalFromB2CToOMSSOAP");
    static {
        URL url = TransForecastPracticalFromB2CToOMS_Service.class.getResource("TransForecastPracticalFromB2CToOMS.wsdl");
        if (url == null) {
            url = TransForecastPracticalFromB2CToOMS_Service.class.getClassLoader().getResource("TransForecastPracticalFromB2CToOMS.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(TransForecastPracticalFromB2CToOMS_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "TransForecastPracticalFromB2CToOMS.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public TransForecastPracticalFromB2CToOMS_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TransForecastPracticalFromB2CToOMS_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TransForecastPracticalFromB2CToOMS_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns TransForecastPracticalFromB2CToOMS
     */
    @WebEndpoint(name = "TransForecastPracticalFromB2CToOMSSOAP")
    public TransForecastPracticalFromB2CToOMS getTransForecastPracticalFromB2CToOMSSOAP() {
        return super.getPort(TransForecastPracticalFromB2CToOMSSOAP, TransForecastPracticalFromB2CToOMS.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TransForecastPracticalFromB2CToOMS
     */
    @WebEndpoint(name = "TransForecastPracticalFromB2CToOMSSOAP")
    public TransForecastPracticalFromB2CToOMS getTransForecastPracticalFromB2CToOMSSOAP(WebServiceFeature... features) {
        return super.getPort(TransForecastPracticalFromB2CToOMSSOAP, TransForecastPracticalFromB2CToOMS.class, features);
    }

}

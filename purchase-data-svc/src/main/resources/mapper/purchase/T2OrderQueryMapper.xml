<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.purchase.data.dao.purchase.T2OrderQueryDao">

	<resultMap id="t2OrderResult" type="com.haier.purchase.data.model.T2OrderItem">
		<result property="storage_id" column="storage_id" />
		<result property="storage_name" column="storage_name" />
		<result property="industry_trade_id" column="industry_trade_id" />
		<result property="industry_trade_desc" column="industry_trade_desc" />
		<result property="custom_id" column="custom_id" />
		<result property="custom_desc" column="custom_desc" />
		<result property="transmit_id" column="transmit_id" />
		<result property="transmit_desc" column="transmit_desc" />
		<result property="distribution_center_id" column="distribution_center_id" />
		<result property="distribution_center_desc" column="distribution_center_desc" />
		<result property="arrival_storage_id" column="arrival_storage_id" />
		<result property="arrival_storage_desc" column="arrival_storage_desc" />
		<result property="materials_desc" column="materials_desc" />
		<result property="t2_delivery_prediction" column="T2_delivery_prediction" />
		<result property="customization" column="customization" />
		<result property="order_id" column="order_id" />
		<result property="oms_order_id" column="oms_order_id" />
		<result property="order_num" column="order_num" />
		<result property="status" column="status" />
		<result property="count" column="count" />
		<result property="price" column="price" />
		<result property="amount" column="amount" />
		<result property="latest_arrive_date_display" column="latest_arrive_date_display" />
		<result property="plan_deliver_date_display" column="plan_deliver_date_display" />
		<result property="promise_arrive_date_display" column="promise_arrive_date_display" />
		<result property="actual_deliver_date_display" column="actual_deliver_date_display" />
		<result property="predict_arrive_date_display" column="predict_arrive_date_display" />
		<result property="dn_create_date_display" column="dn_create_date_display" />
		<result property="industry_trade_take_date_display" column="industry_trade_take_date_display" />
		<result property="industry_trade_deliver_date_display" column="industry_trade_deliver_date_display" />
		<result property="custom_sign_date_display" column="custom_sign_date_display" />
		<result property="return_order_date_display" column="return_order_date_display" />
		<result property="satisfy_type_id" column="satisfy_type_id" />
		<result property="shipment_combination_id" column="shipment_combination_id" />
		<result property="sign_num" column="sign_num" />
		<result property="arrive_delay_days" column="arrive_delay_days" />
		<result property="trans_delay_days" column="trans_delay_days" />
		<result property="no_pass_reason" column="no_pass_reason" />
		<result property="order_type_id" column="order_type_id" />
		<result property="take_type_id" column="take_type_id" />
		<result property="gvs_order_id" column="gvs_order_id" />
		<result property="dn_id" column="dn_id" />
		<result property="confirm_order_time_display" column="confirm_order_time_display" />
		<result property="order_close_time_display" column="order_close_time_display" />
		<result property="channel_commit_time_display" column="channel_commit_time_display" />
		<result property="rrs_order_flag" column="rrs_order_flag" />
		<result property="channel_price" column="channel_price" />
		<result property="delete_flag" column="delete_flag" />
		<result property="flow_flag" column="flow_flag" />
		<result property="channel_commit_user" column="channel_commit_user" />
		<result property="revoke_flag" column="revoke_flag" />
		<result property="error_msg" column="error_msg" />
		<result property="audit_remark" column="audit_remark" />
		<result property="report_year_week" column="report_year_week" />
		<result property="ed_channel_id" column="ed_channel_id" />
		<result property="product_group_id" column="product_group_id" />
		<result property="materials_id" column="materials_id" />
		<result property="brand_id" column="brand_id" />
		<result property="series_id" column="series_id" />
		<result property="oms_order_type" column="oms_order_type" />
		<result property="factory_id" column="factory_id" />
		<result property="factory_name" column="factory_name" />
		<result property="commit_time_display" column="commit_time_display" />
		<result property="WAamount" column="WAamount" />
		<result property="WAqty" column="WAqty" />
		<result property="WAtotal" column="WAtotal" />
		<result property="category_id" column="category_id" />
		<result property="audit_user" column="audit_user" />
		<result property="audit_time_display" column="audit_time_display" />
		<result property="order_close_user" column="order_close_user" />
		<result property="order_category" column="order_category" />
		<result property="audit_depart_user" column="audit_depart_user" />
		<result property="audit_depart_time_display" column="audit_depart_time_display" />
		<result property="audit_depart_remark" column="audit_depart_remark" />
		<result property="importCount" column="IMPORT_COUNT" />
		<result property="relevanceId" column="RELEVANCE_ID" />
		<result property="cancelOrderId" column="CANCEL_ORDER_ID"/>
		<result property="cancelFlag" column="CANCEL_FLAG"/>
	</resultMap>
	
	<sql id="findT2OrderMultipleListSQLCond">
		FROM
		haier_t2_order_t t2 left join crm_order_t crm on t2.order_id =
		crm.source_order_id
		WHERE
		t2.delete_flag = 0
		<if test="arrival_start_week  !=null and arrival_start_week !=''">
	        	<![CDATA[
					and t2.latest_arrive_date >= #{arrival_start_week}
				]]>
		</if>
		<if test="arrival_end_week  !=null and arrival_end_week !=''">
	         	<![CDATA[
					and t2.latest_arrive_date <= #{arrival_end_week}
				]]>
		</if>
		<if test="report_year_week_start !=null and report_year_week_start != ''">
        	<![CDATA[
			AND t2.report_year_week >= #{report_year_week_start}
			]]>
		</if>
		<if test="report_year_week_end !=null and report_year_week_end != ''">
        	<![CDATA[
			AND t2.report_year_week <= #{report_year_week_end}
			]]>
		</if>
		<if test="report_year_week != null and report_year_week != ''">
			and report_year_week = #{report_year_week}
		</if>
		<if test="ed_channel_id != null and ed_channel_id.length > 0">
<!-- 			AND t2.ed_channel_id = #{ed_channel_id} -->
			AND t2.ed_channel_id in
			<foreach item="item" index="index" collection="ed_channel_id"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="product_group_id !=null and product_group_id.length > 0">
<!-- 			AND t2.product_group_id = #{product_group_id} -->
			AND t2.product_group_id in
			<foreach item="item" index="index" collection="product_group_id"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="order_id !=null and order_id != ''">
			AND UPPER(t2.order_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{order_id})),'%')
		</if>
		<if test="oms_order_id !=null and oms_order_id != ''">
			AND UPPER(t2.oms_order_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{oms_order_id})),'%')
		</if>
		<if test="brand_id !=null and brand_id != ''">
			AND t2.brand_id = #{brand_id}
		</if>
		<if test="materials_id !=null and materials_id != ''">
			AND UPPER(t2.materials_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{materials_id})),'%')
		</if>
		<if test="materials_desc !=null and materials_desc != ''">
			AND UPPER(t2.materials_desc) LIKE CONCAT(CONCAT('%',UPPER
			(#{materials_desc})),'%')
		</if>
		<if test="storage_id !=null and storage_id != ''">
			AND UPPER(t2.storage_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{storage_id})),'%')
		</if>
		<if test="flow_flag !=null and flow_flag != '' and flow_flag.length > 0 ">
			<!-- AND t2.flow_flag = #{flow_flag} -->
			AND t2.flow_flag in
			<foreach collection="flow_flag" item="item" index="index" 
				open="(" separator="," close=")">
				#{item}
			</foreach>
<!-- 			AND t2.flow_flag in -->
<!-- 			<foreach item="item" index="index" collection="flow_flag" -->
<!-- 				open="(" separator="," close=")"> -->
<!-- 				#{item} -->
<!-- 			</foreach> -->
		</if>
		<if test="shipment_combination_id !=null and shipment_combination_id != ''">
			AND UPPER(t2.shipment_combination_id) LIKE
			CONCAT(CONCAT('%',UPPER
			(#{shipment_combination_id})),'%')
		</if>
		<if test="gvs_order_id !=null and gvs_order_id != ''">
			AND UPPER(t2.gvs_order_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{gvs_order_id})),'%')
		</if>
		<if test="custom_order_id !=null and custom_order_id != ''">
			AND UPPER(t2.custpodetailcode) LIKE
			CONCAT(CONCAT('%',UPPER
			(#{custom_order_id})),'%')
		</if>
		<if test="customization !=null and customization != ''">
			AND t2.customization = #{customization}
		</if>
		<if test="order_type !=null and order_type != ''">
			AND t2.order_type_id = #{order_type}
		</if>
		<if test="sync_status !=null and sync_status != ''">
			AND t2.sync_status in (${sync_status})
		</if>
		<if test="category_id !=null and category_id.length > 0">
<!-- 			AND t2.category_id = #{category_id} -->
			AND t2.category_id in
			<foreach item="item" index="index" collection="category_id"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="wp_order_list !=null and wp_order_list != ''">
			AND t2.order_id = #{wp_order_list}
<!-- 			AND t2.order_id in -->
<!-- 			<foreach item="item" index="index" collection="wp_order_list" -->
<!-- 				open="(" separator="," close=")"> -->
<!-- 				#{item} -->
<!-- 			</foreach> -->
		</if>
		<if test="order_list!=null">		
		and t2.order_id in
		<foreach collection="order_list" item="item" index="index"
			open="(" separator="," close=")">
			#{item}
		</foreach>
		</if>
		<if test="order_category !=null and order_category != ''">
			AND order_category = #{order_category}
		</if>
		<if test="cancelOrder !=null and cancelOrder != ''">
			AND cancel_flag = #{cancelOrder}
		</if>
	</sql>

	<select id="getIsNullWaInTime" parameterType="Map"
			resultMap="crmOrderResult">
		SELECT
			t2.order_id,
			date_format(crm.rrs_out_time,'%Y-%m-%d %H:%i:%S') as
			rrs_out_time_display,
			crm.wa_in_time
		FROM
			haier_t2_order_t t2
			RIGHT JOIN crm_order_t crm ON t2.order_id = crm.source_order_id
		WHERE
			t2.delete_flag = 0
			AND crm.flow_flag IN ( '70' )
			AND rrs_out_time IS NOT NULL
			AND wa_in_time IS NULL
		ORDER BY
			rrs_out_time
			LIMIT 1
	</select>
	<select id="findT2OrderMultipleExportList" parameterType="Map"
			resultMap="t2OrderResult">
		SELECT SQL_CALC_FOUND_ROWS
		t2.flow_flag,
		t2.order_id,
		date_format(t2.channel_commit_time,'%Y-%m-%d %H:%i:%S') as
		channel_commit_time_display,
		t2.oms_order_id,
		t2.custom_desc,
		t2.transmit_desc,
		t2.report_year_week,
		t2.industry_trade_desc,
		t2.ed_channel_id,
		t2.product_group_id,
		t2.brand_id,
		t2.materials_id,
		t2.materials_desc,
		t2.order_type_id,
		t2.count,
		t2.price,
		t2.amount,
		t2.storage_id,
		t2.storage_name,
		t2.distribution_center_desc,
		t2.arrival_storage_desc,
		t2.series_id,
		t2.status,
		t2.order_category,
		t2.T2_delivery_prediction,
		date_format(t2.latest_arrive_date,'%Y-%m-%d') as
		latest_arrive_date_display,
		date_format(t2.plan_deliver_date,'%Y-%m-%d') as
		plan_deliver_date_display,
		date_format(t2.promise_arrive_date,'%Y-%m-%d') as
		promise_arrive_date_display,
		date_format(t2.actual_deliver_date,'%Y-%m-%d') as
		actual_deliver_date_display,
		date_format(t2.predict_arrive_date,'%Y-%m-%d') as
		predict_arrive_date_display,
		date_format(t2.industry_trade_take_date,'%Y-%m-%d') as
		industry_trade_take_date_display,
		date_format(t2.custom_sign_date,'%Y-%m-%d') as
		custom_sign_date_display,
		date_format(t2.return_order_date,'%Y-%m-%d')
		as return_order_date_display,
		t2.satisfy_type_id,
		date_format(t2.latest_leave_base_date,'%Y-%m-%d') as
		latest_leave_base_date_display,
		t2.factory_id,
		t2.factory_name,
		t2.shipment_combination_id,
		t2.sign_num,
		t2.no_pass_reason,
		t2.pass_reason,
		t2.gvs_order_id,
		t2.dn_id,
		date_format(t2.confirm_order_time,'%Y-%m-%d %H:%i:%S') as confirm_order_time_display,
		date_format(t2.commit_time,'%Y-%m-%d') as commit_time_display,
		t2.rrs_order_flag,
		t2.customization,
		t2.category_id,
		sum(crm.wa_in_num)
		as WAqty,
		t2.channel_commit_user,
		t2.custpodetailcode,
		t2.audit_user,
		t2.error_msg,
		CASE t2.audit_time WHEN DEFAULT(t2.audit_time) THEN ''
		ELSE
		date_format(t2.audit_time,'%Y-%m-%d %H:%i:%S') END as
		audit_time_display,
		t2.order_close_user,
		CASE t2.order_close_time WHEN
		DEFAULT(t2.order_close_time) THEN '' ELSE
		date_format(t2.order_close_time,'%Y-%m-%d %H:%i:%S') END as
		order_close_time_display,
		t2.relevance_id,
		t2.cancel_order_id,
		t2.cancel_flag
		<include refid="findT2OrderMultipleListSQLCond" />
		group by t2.order_id
		<if test="m!=null and n!=null">
			limit ${m},${n}
		</if>
	</select>
	<select id="findT2OrderMultipleList" parameterType="Map"
		resultMap="t2OrderResult">
		SELECT SQL_CALC_FOUND_ROWS
		t2.flow_flag,
		t2.order_id,
		date_format(t2.channel_commit_time,'%Y-%m-%d %H:%i:%S') as
		channel_commit_time_display,
		t2.oms_order_id,
		t2.custom_desc,
		t2.transmit_desc,
		t2.report_year_week,
		t2.industry_trade_desc,
		t2.ed_channel_id,
		t2.product_group_id,
		t2.brand_id,
		t2.materials_id,
		t2.materials_desc,
		t2.order_type_id,
		t2.count,
		t2.price,
		t2.amount,
		t2.storage_id,
		t2.storage_name,
		t2.distribution_center_desc,
		t2.arrival_storage_desc,
		t2.series_id,
		t2.status,
		t2.order_category,
		t2.T2_delivery_prediction,
		date_format(t2.latest_arrive_date,'%Y-%m-%d') as
		latest_arrive_date_display,
		date_format(t2.plan_deliver_date,'%Y-%m-%d') as
		plan_deliver_date_display,
		date_format(t2.promise_arrive_date,'%Y-%m-%d') as
		promise_arrive_date_display,
		date_format(t2.actual_deliver_date,'%Y-%m-%d') as
		actual_deliver_date_display,
		date_format(t2.predict_arrive_date,'%Y-%m-%d') as
		predict_arrive_date_display,
		date_format(t2.industry_trade_take_date,'%Y-%m-%d') as
		industry_trade_take_date_display,
		date_format(t2.custom_sign_date,'%Y-%m-%d') as
		custom_sign_date_display,
		date_format(t2.return_order_date,'%Y-%m-%d')
		as return_order_date_display,
		t2.satisfy_type_id,
		date_format(t2.latest_leave_base_date,'%Y-%m-%d') as
		latest_leave_base_date_display,
		t2.factory_id,
		t2.factory_name,
		t2.shipment_combination_id,
		t2.sign_num,
		t2.no_pass_reason,
		t2.pass_reason,
		t2.gvs_order_id,
		t2.dn_id,
		date_format(t2.confirm_order_time,'%Y-%m-%d %H:%i:%S') as confirm_order_time_display,
		date_format(t2.commit_time,'%Y-%m-%d') as commit_time_display,
		t2.rrs_order_flag,
		t2.customization,
		t2.category_id,
		sum(crm.wa_in_num)
		as WAqty,
		t2.channel_commit_user,
		t2.custpodetailcode,
		t2.audit_user,
		t2.error_msg,
		CASE t2.audit_time WHEN DEFAULT(t2.audit_time) THEN ''
		ELSE
		date_format(t2.audit_time,'%Y-%m-%d %H:%i:%S') END as
		audit_time_display,
		t2.order_close_user,
		CASE t2.order_close_time WHEN
		DEFAULT(t2.order_close_time) THEN '' ELSE
		date_format(t2.order_close_time,'%Y-%m-%d %H:%i:%S') END as
		order_close_time_display,
 		t2.relevance_id,
		t2.cancel_order_id,
		t2.cancel_flag
		<include refid="findT2OrderMultipleListSQLCond" />
		group by t2.order_id
		ORDER BY
		t2.report_year_week desc, t2.order_id desc
		<if test="m!=null and n!=null">
			limit ${m},${n}
		</if>
	</select>
	
	<update id="manualCloseOrder" parameterType="Map">
		UPDATE haier_t2_order_t SET order_close_user=#{order_close_user},
		order_close_time=CURRENT_TIMESTAMP(), flow_flag=-70
		WHERE delete_flag =
		0 AND flow_flag = 60 AND order_id in
		<foreach collection="manualCloseList" item="item" index="index"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	
	<update id="cancelCloseOrder" parameterType="Map">
		UPDATE haier_t2_order_t SET order_close_time = null , order_close_user
		= null, flow_flag=60
		WHERE delete_flag = 0 AND flow_flag = -70 AND
		order_id in
		<foreach collection="cancelCloseList" item="item" index="index"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>

<!--	<select id="getRowCnts" resultType="int">
		SELECT
		FOUND_ROWS();
	</select>-->

	<select id="getRowCnts" resultType="int">
		select
			count(1)
		from(
		SELECT t2.order_id
			<include refid="findT2OrderMultipleListSQLCond" />
		group by t2.order_id
		) as a
	</select>
	
	<update id="commitAgainOrderMultiple" parameterType="map">
		update
		haier_t2_order_t SET 
		flow_flag=(case when #{status}='S' Then 30 else flow_flag end), 
		no_pass_reason = #{no_pass_reason},
		pass_reason=#{pass_reason}
		where 
		oms_order_id= #{oms_order_id} and flow_flag=25;
	</update>
	
	<resultMap id="crmOrderResult" type="com.haier.purchase.data.model.CrmOrderItem">
		<result property="order_id" column="order_id" />
		<result property="t2_delivery_prediction" column="T2_delivery_prediction" />
		<result property="po_id" column="po_id" />
		<result property="bill_order_id" column="bill_order_id" />
		<result property="bill_time" column="bill_time" jdbcType="TIMESTAMP"
			typeHandler="org.apache.ibatis.type.DateTypeHandler" />
		<result property="so_id" column="so_id" />
		<result property="dn_id" column="dn_id" />
		<result property="ed_channel_id" column="ed_channel_id" />
		<result property="product_group_id" column="product_group_id" />
		<result property="materials_id" column="materials_id" />
		<result property="materials_desc" column="materials_desc" />
		<result property="amount" column="amount" />
		<result property="qty" column="qty" />
		<result property="total" column="total" />
		<result property="bate_rate" column="bate_rate" />
		<result property="flow_flag" column="flow_flag" />
		<result property="rrs_out_time" column="rrs_out_time" jdbcType="TIMESTAMP"
			typeHandler="org.apache.ibatis.type.DateTypeHandler" />
		<result property="wa_in_time" column="wa_in_time" jdbcType="TIMESTAMP"
			typeHandler="org.apache.ibatis.type.DateTypeHandler" />
		<result property="storage_id" column="storage_id" />
		<result property="brand_id" column="brand_id" />
		<result property="category_id" column="category_id" />
		<result property="bill_time_display" column="bill_time_display" />
		<result property="rrs_out_time_display" column="rrs_out_time_display" />
		<result property="wa_in_time_display" column="wa_in_time_display" />
		<result property="price" column="price" />
		<result property="t2_amount" column="t2_amount" />
		<result property="shipment_combination_id" column="shipment_combination_id" />
		<result property="custpodetailcode" column="custpodetailcode" />
		
		<result property="subscribe_code" column="subscribe_code" />
		<result property="push_sap_resoult" column="push_sap_resoult" />
		<result property="w3_local_code" column="3w_local_code" />
		<result property="sign_num" column="sign_num" />
		<result property="import_date" column="import_date" />
		<result property="sign_date" column="sign_date" />
		<result property="jcode" column="jcode" />
	</resultMap>
	
	<sql id="findPOListSQLCond">
		FROM
		haier_t2_order_t t2 right join crm_order_t crm on t2.order_id =
		crm.source_order_id
		WHERE
		t2.delete_flag = 0
		<if test="report_start_week  !=null and report_start_week  != ''">
	        	<![CDATA[
					and t2.latest_arrive_date >= #{report_start_week}
				]]>
		</if>
		<if test="report_end_week  !=null and report_end_week  != ''">
	         	<![CDATA[
					and t2.latest_arrive_date <= #{report_end_week}
				]]>
		</if>
		<if test="ed_channel_id !=null and ed_channel_id.length > 0">
			AND t2.ed_channel_id in
			<foreach item="item" index="index" collection="ed_channel_id"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="product_group_id !=null and product_group_id.length > 0">
			AND t2.product_group_id in
			<foreach item="item" index="index" collection="product_group_id"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="wp_order_id !=null and wp_order_id != ''">
			AND UPPER(t2.order_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{wp_order_id})),'%')
		</if>
		<if test="storage_id !=null and storage_id != ''">
			AND UPPER(t2.storage_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{storage_id})),'%')
		</if>
		<if test="flow_flag !=null and flow_flag != ''">
			AND crm.flow_flag in
			<foreach item="item" index="index" collection="flow_flag"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="materials_id !=null and materials_id != ''">
			AND UPPER(t2.materials_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{materials_id})),'%')
		</if>
		<if test="bill_time_start  !=null and bill_time_start  != ''">
	        	<![CDATA[
					and crm.bill_time >= #{bill_time_start}
				]]>
		</if>
		<if test="bill_time_end  !=null and bill_time_end  != ''">
	         	<![CDATA[
					and crm.bill_time < #{bill_time_end}
				]]>
		</if>
		<if test="bill_order_id !=null and bill_order_id != ''">
			AND UPPER(crm.bill_order_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{bill_order_id})),'%')
		</if>
		<if test="so_id !=null and so_id != ''">
			AND UPPER(crm.so_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{so_id})),'%')
		</if>
		<if test="dn_id !=null and dn_id != ''">
			AND UPPER(crm.dn_id) LIKE CONCAT(CONCAT('%',UPPER
			(#{dn_id})),'%')
		</if>
		<if test="datestorge_start  !=null and datestorge_start  != ''">
	        	<![CDATA[
					and crm.wa_in_time >= #{datestorge_start}
				]]>
		</if>
		<if test="datestorge_end  !=null and datestorge_end  != ''">
	         	<![CDATA[
					and crm.wa_in_time < #{datestorge_end}
				]]>
		</if>
		<if test="brand_id !=null and brand_id != ''">
			AND t2.brand_id = #{brand_id}
		</if>
		<if test="category_id !=null and category_id.length > 0">
			AND t2.category_id in
			<foreach item="item" index="index" collection="category_id"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="materials_desc !=null and materials_desc != ''">
			AND UPPER(t2.materials_desc) LIKE CONCAT(CONCAT('%',UPPER
			(#{materials_desc})),'%')
		</if>
		<if test="wp_order_list !=null and wp_order_list != ''">
			AND t2.order_id in
			<foreach item="item" index="index" collection="wp_order_list"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="bill_order_list !=null and bill_order_list != ''">
			AND crm.bill_order_id in
			<foreach item="item" index="index" collection="bill_order_list"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</sql>
	<select id="findPOList" parameterType="Map" resultMap="crmOrderResult">
		SELECT t2.order_id,
		CONCAT('PO',crm.so_id) as po_id,
		crm.bill_order_id,
		CASE crm.bill_time WHEN DEFAULT(crm.bill_time) THEN '' ELSE
		date_format(crm.bill_time,'%Y-%m-%d %H:%i:%S') END as
		bill_time_display,
		crm.so_id,
		crm.dn_id,
		t2.ed_channel_id,
		t2.product_group_id,
		t2.materials_desc,
		t2.materials_id,
		crm.amount,
		crm.qty,
		crm.total,
		crm.bate_rate,
		CASE crm.rrs_out_time WHEN
		DEFAULT(crm.rrs_out_time) THEN '' ELSE
		date_format(crm.rrs_out_time,'%Y-%m-%d %H:%i:%S') END as
		rrs_out_time_display,
		CASE crm.wa_in_time WHEN DEFAULT(crm.wa_in_time)
		THEN '' ELSE
		date_format(crm.wa_in_time,'%Y-%m-%d %H:%i:%S') END as
		wa_in_time_display,
		crm.flow_flag,
		t2.delete_flag,
		t2.storage_id,
		t2.storage_name,
		t2.report_year_week,
		t2.brand_id,
		t2.category_id,
		t2.price,
		t2.amount as t2_amount,
		crm.wa_in_num as WAqty
		<include refid="findPOListSQLCond" />
		order by crm.bill_time desc
		<if test="m!=null and n!=null">
			limit ${m},${n}
		</if>
	</select>
	
	<select id="findPOListCNT" resultType="int">
		SELECT COUNT(1)
		<include refid="findPOListSQLCond" />
	</select>

	<select id="getByOrderId" resultType="java.lang.Integer">
		SELECT
			count(*)
		FROM
			haier_t2_order_t t1,
			crm_order_t t2
		WHERE
			t1.order_id = t2.source_order_id
			and t2.dn_id = #{orderId}
	</select>
</mapper>
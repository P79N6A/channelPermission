<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.stock.dao.stock.InvStockLockDesDao">
	<resultMap id="invStockLockDesResult" type="com.haier.stock.model.InvStockLockDes">
        <result property="id" column="id"/>
        <result property="sku" column="sku"/>
        <result property="secCode" column="sec_code"/>
        <result property="refno" column="refno"/>
        <result property="lockQty" column="lockQty"/>
        <result property="lockId" column="lockid"/>
        <result property="channel" column="channel"/>
    </resultMap>

	<select id="queryWaLockDetails" resultType="map">
		select des.refno, l.channel, des.sec_code,des.sku,des.lockQty,l.lock_time from `inv_stock_lock_des` des, `inv_stock_lock` l 
		where des.lockId = l.id and l.lockQty > l.realeaseQty 
		and l.sec_code like '%WA' and des.channel=#{channnelCode} 
		and des.sec_code=#{secCode} and des.sku=#{sku} and status=1 
	</select>
	<select id="queryChannelLockDetails" resultType="map">
		select des.refno, l.channel, des.sec_code,des.sku,des.lockQty,l.lock_time from `inv_stock_lock_des` des, `inv_stock_lock` l 
		where des.lockId = l.id and l.lockQty > l.realeaseQty 
		and l.sec_code not like '%WA' and des.channel=#{channnelCode} 
		and des.sec_code=#{secCode} and des.sku=#{sku} and status=1  
	</select>
	<select id="getRowCnt" resultType="int">
		    select FOUND_ROWS();
	</select>
	
	<select id="getBySecCodeAndSku" parameterType="com.haier.stock.model.InvStockLockEx" resultType="com.haier.stock.model.InvStockLockEx">
		SELECT  sku, l.id as id, refno ,s.sec_code secCode, s.sec_name secName, s.channel_code channelCode, channel, lockQty lockQty, realeaseQty realeaseQty, opt_user optUser, lock_time lockTime  
		<include refid="where_fragement" /> 
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if> 
	</select>
	
	<select id="getBySecCodeAndSkuCount" parameterType="java.util.Map" resultType="Integer">
	  select count(*) 
	  <include refid="where_fragement" />
	</select>
	
	<sql id="where_fragement">
		 FROM inv_stock_lock l, inv_section s where l.sec_code = s.sec_code and lockQty > realeaseQty
		<if test="sku != null and sku !=''">
				and l.sku =#{sku}
		</if>
		<if test="secCode != null and secCode !=''">
				and l.sec_code =#{secCode}
		</if>
		<if test="refno != null and refno !=''">
				and l.refno =#{refno}
		</if>
		<if test="optUser != null and optUser !='' ">
				and l.opt_user =#{optUser}
		</if>
		<if test="lockQty != null and lockQty !='' ">
				and l.lockQty = ${lockQty}
		</if>
		<if test="startDate != null and startDate !=''">
				and l.lock_time &gt;=#{startDate}
		</if>
		<if test="endDate != null and endDate !=''">
				and l.lock_time &lt;=#{endDate}
		</if>
		and l.refno like 'SD%' 
	</sql>
	<delete id="delete">
    	DELETE FROM inv_stock_lock_des
    </delete>
     <select id="queryWaStockQtyByChannel" resultMap="invStockLockDesResult">
    	<![CDATA[
	   		SELECT des.channel, SUM(des.lockQty) as lockQty FROM `inv_stock_lock_des` des, `inv_stock_lock` l WHERE des.lockId=l.id 
	   		AND l.lockQty > l.realeaseQty 
	   		AND des.status=1 
	   		AND l.sku=#{sku} 
	   		AND l.sec_code=#{secCode}
	   		GROUP BY channel
   		 ]]>
    </select>
    
    <insert id="insert" parameterType="com.haier.stock.model.InvStockLockDes">
        INSERT INTO `inv_stock_lock_des` (`sku`, `sec_code`, `refno`, `lockQty`, `lockId`, `channel`, create_time,status)
            VALUES(
                #{lockDes.sku},
                #{lockDes.secCode},
                #{lockDes.refno},
                #{lockDes.lockQty},
                #{lockDes.lockId},
                #{lockDes.channel},now(),
                1)
         
    </insert>
    <update id="update"  parameterType="com.haier.stock.model.InvStockLockDes">
    	UPDATE `inv_stock_lock_des` SET status=0 WHERE lockId=#{lockDes.lockId}
    </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.stock.dao.stock.InvStoreSynchDao">
	<resultMap id="invStoreSynchResult" type="com.haier.stock.model.InvStoreSynch">
		<result property="id" column="id" />
		<result property="sku" column="sku" />
		<result property="itemProperty" column="item_property" />
		<result property="storeCode" column="store_code" />
		<result property="stockQty" column="stock_qty" />
		<result property="status" column="status" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<select id="get" parameterType="Integer" resultMap="invStoreSynchResult">
		select `id`,`sku`,`item_property`,`store_code`,`stock_qty`,`status`,`create_time`,`update_time`
		from `inv_store_synch`
		where `id` = #{id}
	</select>
	<select id="queryStoreList" resultMap="invStoreSynchResult">
		select `id`,`sku`,`item_property`,`store_code`,`stock_qty`,`status`,`create_time`,`update_time`
		from `inv_store_synch`
		where status=0 order by id asc limit #{topx}
	</select>
	<insert id="insert" parameterType="com.haier.stock.model.InvStoreSynch">
		insert into `inv_store_synch`(`sku`,`item_property`,`store_code`,`stock_qty`,`status`,`create_time`,`update_time`)
		values(#{sku},#{itemProperty},#{storeCode},#{stockQty},#{status},#{createTime},#{updateTime})
	</insert>
	<insert id="batchInsert" parameterType="java.util.List">
		insert into
		`inv_store_synch`(`sku`,`ext_sku`,`item_property`,`store_code`,`stock_qty`,`status`,`create_time`,`update_time`)
		values
		<foreach collection="invStoreSynchList" item="store" index="index" separator=",">
			(#{store.sku},#{store.extSku},#{store.itemProperty},#{store.storeCode},#{store.stockQty},0,now(),#{store.updateTime})
		</foreach>
		<selectKey resultType="Integer" keyProperty="id" order="AFTER" statementType="STATEMENT">select last_insert_id()</selectKey>
	</insert>
	<update id="updateStatusById" parameterType="map">
		update `inv_store_synch` SET `status`=#{status},`message`=#{message} where `id` = #{id}
	</update>
	<update id="update" parameterType="com.haier.stock.model.InvStoreSynch">
		update `inv_store_synch` set `status`=#{status}, message=#{message},`update_time`=now()
		where `id` = #{id}
	</update>
</mapper>
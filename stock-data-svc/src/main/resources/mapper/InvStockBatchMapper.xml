<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haier.stock.dao.stock.InvStockBatchDao">
	<resultMap id="invStockBatchResult" type="com.haier.stock.model.InvStockBatch">
		<result property="id" column="id" />
		<result property="batchNum" column="batch_num" />
		<result property="refno" column="refno" />
		<result property="billtype" column="billtype" />
		<result property="sku" column="sku" />
		<result property="secCode" column="sec_code" />
		<result property="stockQty" column="stock_qty" />
		<result property="outQty" column="out_qty" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
	</resultMap>
	<select id="getFrontAvailable" resultMap="invStockBatchResult">
		select
		`id`,`batch_num`,`refno`,`billtype`,`sku`,`sec_code`,`stock_qty`,`out_qty`,`add_time`,`update_time`
		from `inv_stock_batch`
		where `sku` = #{sku} and sec_code = #{sec_code}
		and `stock_qty` &gt; 0
		limit 1
	</select>
	<select id="getLastBatchNum" resultType="String">
		select
		max(`batch_num`)
		from `inv_stock_batch`
	</select>
	<select id="queryInvStockBatch" resultMap="invStockBatchResult">
		select * from inv_stock_batch batch where batch.id &gt; #{lastBatchId} limit #{startIndex}, #{pageSize}
	</select>
	<select id="queryInvReleaseStock" resultMap="invStockBatchResult">
		select batch.* from inv_stock_batch batch, inv_reserved_to_release reserved where batch.id = reserved.batch_id and reserved.status=0 and reserved.release_time &lt;= #{now} limit #{startIndex}, #{pageSize}
	</select>
	<select id="getSumStockBySku" resultType="int">
		select sum(stock_qty) from inv_stock_batch batch where batch.sku =#{sku} and batch.sec_code=#{sec_code} and batch.stock_qty &gt; 0 and batch.id &lt; #{id}
	</select>
	<insert id="insert" parameterType="com.haier.stock.model.InvStockBatch">
		insert into
		`inv_stock_batch`(`batch_num`,`refno`,`billtype`,`sku`,`sec_code`,`stock_qty`,`out_qty`,`add_time`,`update_time`)
		values(#{batchNum},#{refno},#{billtype},#{sku},#{secCode},#{stockQty},#{outQty},#{addTime},#{updateTime})
	</insert>
	<update id="update" parameterType="com.haier.stock.model.InvStockBatch">
		update `inv_stock_batch` set
		`batch_num`=#{batchNum},`refno`=#{refno},`billtype`=#{billtype},`sku`=#{sku},`sec_code`=#{secCode},`stock_qty`=#{stockQty},`out_qty`=#{outQty},`add_time`=#{addTime},`update_time`=#{updateTime}
		where `id` = #{id}
	</update>
	<update id="updateQty" parameterType="com.haier.stock.model.InvStockBatch">
		update `inv_stock_batch`
		set
		`stock_qty`= case when convert(`stock_qty`,SIGNED)-#{stockQty}>0 then `stock_qty`-${stockQty} else 0 end,
		`out_qty`=`out_qty` + ${outQty},
		`update_time`=#{updateTime}
		where `id` = #{id}
	</update>
</mapper>